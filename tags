!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	src/gtk_ui/Makefile	/^CC = gcc$/;"	m
CFLAGS	src/gtk_ui/Makefile	/^CFLAGS = `pkg-config --cflags ${LIBS}` -g -Wall$/;"	m
DEF_PROMPT	src/shell/shell.c	16;"	d	file:
LIBS	src/gtk_ui/Makefile	/^LIBS= --libs gtk+-2.0$/;"	m
OBJS	src/gtk_ui/Makefile	/^OBJS = $(SRC:.c=.o)$/;"	m
PROGRAM	src/gtk_ui/Makefile	/^PROGRAM = myshell$/;"	m
SRC	src/gtk_ui/Makefile	/^SRC = mainWindow.c$/;"	m
cb_button	src/gtk_ui/example/box.c	/^void cb_button(GtkWidget *widget, gpointer data)$/;"	f	signature:(GtkWidget *widget, gpointer data)
cb_button	src/gtk_ui/example/button.c	/^void cb_button(GtkWidget *widget, gpointer data)$/;"	f	signature:(GtkWidget *widget, gpointer data)
delete_event	src/gtk_ui/example/example_windows.c	/^gint delete_event(GtkWidget *widget,GdkEvent *event,gpointer data)$/;"	f	signature:(GtkWidget *widget,GdkEvent *event,gpointer data)
destroy	src/gtk_ui/example/example_windows.c	/^void destroy(GtkWidget *widget,gpointer data)$/;"	f	signature:(GtkWidget *widget,gpointer data)
destroy	src/gtk_ui/mainWindow.c	/^void destroy(GtkWidget *widget, gpointer data)$/;"	f	signature:(GtkWidget *widget, gpointer data)
destroy	src/gtk_ui/mainWindow.c	/^void destroy(GtkWidget *widget, gpointer data);$/;"	p	file:	signature:(GtkWidget *widget, gpointer data)
hello	src/gtk_ui/example/example_windows.c	/^void hello(GtkWidget *widget,gpointer data)$/;"	f	signature:(GtkWidget *widget,gpointer data)
main	src/gtk_ui/example/box.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	src/gtk_ui/example/button.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	src/gtk_ui/example/example_windows.c	/^int main( int argc, char *argv[] )$/;"	f	signature:( int argc, char *argv[] )
main	src/gtk_ui/mainWindow.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	src/shell/shell.c	/^int main(int argc, const char *argv[])$/;"	f	signature:(int argc, const char *argv[])
setup	src/shell/shell.c	/^void setup();$/;"	p	file:
