cscope 15 $HOME/myshell/src/command               0000528437
	@cat/icat.c

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<sys/io˘l.h
>

22 
	~<uni°d.h
>

23 
	~<f˙é.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<sys/°©.h
>

32 
	#BUF_SIZE
 128

	)

34 
	#¥ogøm_«me
 "iˇt"

	)

36 
	#R_TRUE
 0

	)

38 
	#R_FALSE
 1

	)

41 
	$ußge
(
°©us
)

43 i‡(
°©us
 !
R_TRUE
)

44 
	`Ârötf
 (
°dîr
, ("Try `%s --help' for more information.\n"),

45 
¥ogøm_«me
);

48 
	`¥ötf
 (("Ußge: %†[OPTION]...\n"), 
¥ogøm_«me
);

49 
	`¥ötf
(("\n%s\n%s\n"),"Concatenate FILE(s), or standard input,Åo standard output",

52 
	`exô
 (
°©us
);

53 
	}
}

55 
	$is_dúe˘‹y
(c⁄° *
fûe
)

57 
°©
 
°©_ck
;

58 
	`¥ötf
("%d\n",
	`°©
(
fûe
, &
°©_ck
));

59 i‡(
	`S_ISDIR
(
°©_ck
.
°_mode
))

61  
R_FALSE
;

64  
R_TRUE
;

65 
	}
}

67 
	$do_ˇt_wôh_›ti⁄
(c⁄° *
fûe
, c⁄° *
›ti⁄
)

69 i‡(
fûe
 =
NULL
 || 
›ti⁄
 == NULL)

74 i‡(
	`is_dúe˘‹y
(
fûe
Ë=
R_TRUE
)

76 
	`¥ötf
("%s: %s: I†®dúe˘‹y\n", 
¥ogøm_«me
, 
fûe
);

81 
FILE
 *
Â
;

82 *
löe
 = 
NULL
;

83 
size_t
 
Àn
 = 0;

84 
ssize_t
 
n_ªad
;

85 
löe_num
 = 0;

87 i‡((
Â
 = 
	`f›í
(
fûe
, "r")Ë=
NULL
)

89 
	`exô
(1);

92 (
n_ªad
 = 
	`gëlöe
(&
löe
, &
Àn
, 
Â
)) != -1)

94 
	`¥ötf
("%ld%s", 
löe_num
, 
löe
);

97 i‡(
löe
)

98 
	`‰ì
(
löe
);

100 
	`f˛o£
(
Â
);

101 
	}
}

103 
	$do_ˇt
(c⁄° *
fûe
)

105 i‡(
	`is_dúe˘‹y
(
fûe
Ë=
R_TRUE
)

107 
	`¥ötf
("%s: %s: I†®dúe˘‹y\n", 
¥ogøm_«me
, 
fûe
);

111 
ªad_size
 = 0;

112 
buf
[
BUF_SIZE
];

113 
fd
;

114 i‡((
fd
 = 
	`›í
(
fûe
, 
O_RDONLY
)) == -1)

116 
	`¥ötf
("ˇn'àªad %s,ÖÀa£ check it'†≥rmisi⁄\n", 
fûe
);

117 
	`exô
(1);

120 (
ªad_size
 = 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) != 0)

122 
buf
[
ªad_size
] = '\0';

123 
	`¥ötf
("%s", 
buf
);

125 
	`˛o£
(
fd
);

126 
	}
}

128 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

136 
	`do_ˇt_wôh_›ti⁄
(
¨gv
[2],árgv[1]);

139 
	}
}

	@cd/icd.c

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

22 
	~<uni°d.h
>

23 
	~<sys/ty≥s.h
>

24 
	~<dúít.h
>

26 
	#HOME_DIR
 "/home/pxu∆/myshñl/§c/shñl/"

	)

28 
	$ußge
()

30 
	`¥ötf
("Usage: cd [OPTIONS] DIRECTORY\n icd --help");

31 
	}
}

33 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

35 i‡(
¨gc
 == 1)

37 
	`chdú
(
HOME_DIR
);

40 i‡(
¨gc
 > 2)

42 
	`≥º‹
("only one directory isávailable\n");

43 
	`exô
(1);

46 i‡(
¨gc
 == 2)

48 
	`chdú
(
¨gv
[1]);

52 
	`ußge
();

56 
	}
}

	@cp/icp.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<uni°d.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<dúít.h
>

27 
	~<sys/°©.h
>

29 
	#BUF_SIZE
 256

	)

33 
	mFAIL
,

34 
	mSUCCEED


35 }
	tExô_Code
;

37 
c›y_fûe
(*
§c
, *
de°
);

38 
do_c›y
(*
§c
, *
de°
);

40 
	$maö
(
¨gc
, *
¨gv
[])

42 i‡(
¨gc
 < 3)

44 
	`≥º‹
("Usage: icp source dest\n");

45 
	`exô
(1);

48 
i
;

49 
i
 = 1; i < 
¨gc
 - 1; i++)

51 
	`do_c›y
(
¨gv
[
i
],árgv[
¨gc
-1]);

54 
	`¥ötf
("Finish...\n");

57 
	}
}

67 
	$do_c›y
(*
§c
, *
de°
)

69 i‡(!(*
§c
Ë|| !(*
de°
))

71  
FAIL
;

74 
DIR
 *
§c_dú
;

76 *
§c_°r
(*)
	`mÆloc
((Ë* 
	`°æí
(
§c
));

77 *
de°_°r
 = (*)
	`mÆloc
((Ë* 
	`°æí
(
de°
));

78 
	`°r˝y
(
§c_°r
, 
§c
);

79 
	`°r˝y
(
de°_°r
, 
de°
);

81 
dúít
 *
íåy
;

82 
°©
 
°©_buf
;

85 i‡(
	`°rcmp
(
§c
, "-d") == 0)

91 i‡((
§c_dú

	`›ídú
(
§c
)Ë=
NULL
)

94 
	`c›y_fûe
(
§c
, 
de°
);

98 (
íåy
 = 
	`ªaddú
(
§c_dú
)Ë!
NULL
)

100 
	`l°©
(
íåy
->
d_«me
, &
°©_buf
);

103 i‡(
	`S_ISDIR
(
°©_buf
.
°_mode
))

105 i‡((
	`°rcmp
(".", 
íåy
->
d_«me
) == 0)

106 || (
	`°rcmp
("..", 
íåy
->
d_«me
) == 0))

112 
	`°rˇt
(
de°_°r
, "/");

113 
	`°rˇt
(
de°_°r
, 
íåy
->
d_«me
);

115 
	`mkdú
(
de°_°r
, 
S_IRWXU
);

118 
	`°rˇt
(
§c_°r
, "/");

119 
	`°rˇt
(
§c_°r
, 
íåy
->
d_«me
);

121 
	`do_c›y
(
§c_°r
, 
de°_°r
);

124 
	`°r˝y
(
§c_°r
, 
§c
);

125 
	`°r˝y
(
de°_°r
, 
de°
);

130 
	`c›y_fûe
(
§c
, 
de°
);

131  
SUCCEED
;

137  
FAIL
;

138 
	}
}

140 
	$c›y_fûe
(*
§c
, *
de°
)

142 
FILE
 *
§c_Â
 = 
	`f›í
(
§c
, "r");

144 *
√w_fûe
 = 
NULL
;

147 i‡((
√w_fûe
 = 
	`°ºchr
(
§c
, '/')Ë=
NULL
)

149 
	`°rˇt
(
de°
, "/");

150 
	`°rˇt
(
de°
, 
§c
);

154 
	`°rˇt
(
de°
, 
√w_fûe
);

157 
FILE
 *
de°_Â
 = 
	`f›í
(
de°
, "w+");

158 *
buf
[
BUF_SIZE
];

159 
ªv_size
 = 0;

161 i‡(
§c_Â
 =
NULL
 || 
de°_Â
 == NULL)

163 
	`¥ötf
("ˇn'à›í fûê%s", 
§c
);

164 
	`¥ötf
("‹ %s", 
de°
);

168 (
ªv_size
 = 
	`‰ód
(
buf
, 
BUF_SIZE
, 1, 
§c_Â
)) > 0)

170 
	`fwrôe
(
buf
, 
BUF_SIZE
, 
ªv_size
, 
de°_Â
);

172 
	}
}

	@echo/iecho.c

20 
	~<°dio.h
>

21 
	~<°dlib.h
>

22 
	~<°rög.h
>

25 
	$do_echo
(c⁄° *
ouçut
, 
Êag
)

27 i‡(1 =
Êag
)

29 
	`¥ötf
("%s\n", 
ouçut
);

33 
	`¥ötf
("%† ", 
ouçut
);

35 
	}
}

37 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

39 i‡(
¨gc
 < 2)

41 
	`¥ötf
("NothingÅo output\n");

45 
i
;

46 
Êag_r
 = 0;

47 
i
 = 1; i < 
¨gc
; i++)

49 i‡(
	`°Ωbrk
(
¨gv
[
i
], "-r"Ë!
NULL
)

51 
Êag_r
 = 1;

55 
i
 = 1; i < 
¨gc
; i++)

57 i‡(1 =
Êag_r
)

59 
	`do_echo
(
¨gv
[
i
], 1);

63 
	`do_echo
(
¨gv
[
i
], 0);

68 
	}
}

	@ls/dir/filesize.c

3 
	~<°dio.h
>

4 
	~<sys/°©.h
>

6 
	$maö
()

8 
°©
 
öfobuf
;

10 i‡–
	`°©
–"/ëc/∑sswd", &
öfobuf
) == -1 )

11 
	`≥º‹
("/etc/passwd");

13 
	`¥ötf
(" Thêsizêo‡/ëc/∑sswd i†%d\n", 
öfobuf
.
°_size
 );

14 
	}
}

	@ls/dir/te.c

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

	@ls/fileinfo.c

5 
	~<°dio.h
>

6 
	~<sys/ty≥s.h
>

7 
	~<sys/°©.h
>

9 
show_°©_öfo
(*, 
°©
 *);

11 
	$maö
(
ac
, *
av
[])

13 
°©
 
öfo
;

15 i‡(
ac
>1)

16 if–
	`°©
(
av
[1], &
öfo
) != -1 ){

17 
	`show_°©_öfo
–
av
[1], &
öfo
 );

21 
	`≥º‹
(
av
[1]);

23 
	}
}

24 
	$show_°©_öfo
(*
‚ame
, 
°©
 *
buf
)

29 
	`¥ötf
(" mode: %o\n", 
buf
->
°_mode
);

30 
	`¥ötf
("Üöks: %d\n", 
buf
->
°_∆ök
);

31 
	`¥ötf
(" u£r: %d\n", 
buf
->
°_uid
);

32 
	`¥ötf
(" group: %d\n", 
buf
->
°_gid
);

33 
	`¥ötf
(" size: %d\n", 
buf
->
°_size
);

34 
	`¥ötf
("modtime: %d\n", 
buf
->
°_mtime
);

35 
	`¥ötf
("Çame: %s\n", 
‚ame
 );

36 
	}
}

	@ls/filesize.c

3 
	~<°dio.h
>

4 
	~<sys/°©.h
>

6 
	$maö
()

8 
°©
 
öfobuf
;

10 i‡–
	`°©
–"/ëc/∑sswd", &
öfobuf
) == -1 )

11 
	`≥º‹
("/etc/passwd");

13 
	`¥ötf
(" Thêsizêo‡/ëc/∑sswd i†%d\n", 
öfobuf
.
°_size
 );

14 
	}
}

	@ls/ils.c

21 
	~<°dio.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<dúít.h
>

24 
	~<sys/°©.h
>

25 
	~<uni°d.h
>

26 
	~<°rög.h
>

27 
	~<gΩ.h
>

28 
	~<pwd.h
>

30 
do_ls
(c⁄° 
dú«me
[], 
Êag
);

31 
do_°©
(*);

32 
show_fûe_öfo
–*, 
°©
 *);

33 
mode_to_Àâîs
( , [] );

34 *
uid_to_«me
–
uid_t
 );

35 *
gid_to_«me
–
gid_t
 );

37 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

39 
i
 = 0;

40 
Êag
 = 0;

41 
dúít
 *
dú_p
;

43 i‡–
¨gc
 == 1 )

45 
	`do_ls
( ".", 0);

51 
¨gv
[
i
] !
NULL
)

53 i‡(
	`°rcmp
(
¨gv
[
i
++], "-a") == 0)

55 
Êag
 = 1;

61 i‡(
¨gc
 =2 && 
Êag
 == 1)

63 
	`do_ls
( ".", 1);

67  --
¨gc
 )

69 
	`do_ls
–*(++
¨gv
), 
Êag
);

73 
	}
}

78 
	$do_ls
(c⁄° 
dú«me
[], 
Êag
)

80 
DIR
 *
dú_±r
;

81 
dúít
 *
dúíç
;

82 
°©
 
°©e_buf
;

84 i‡(
	`°rcmp
(
dú«me
, "-a") == 0)

89 i‡––
dú_±r
 = 
	`›ídú
(
dú«me
ËË=
NULL
 )

91 
	`Ârötf
(
°dîr
,"ûs: c™nŸ o≥¿%s\n", 
dú«me
);

95  ( 
dúíç
 = 
	`ªaddú
–
dú_±r
 ) ) !
NULL
 )

97 i‡(
Êag
 == 1)

99 
	`do_°©
(
dúíç
->
d_«me
);

103 
	`¥ötf
("%s\n", 
dúíç
->
d_«me
);

106 
	`˛o£dú
(
dú_±r
);

108 
	}
}

110 
	$do_°©
–*
fûíame
)

112 
°©
 
öfo
;

114 i‡–
	`°©
(
fûíame
, &
öfo
) == -1 )

116 
	`≥º‹
–
fûíame
 );

120 
	`show_fûe_öfo
–
fûíame
, &
öfo
 );

122 
	}
}

128 
	$show_fûe_öfo
–*
fûíame
, 
°©
 *
öfo_p
 )

130 *
	`uid_to_«me
();

131 *
	`˘ime
();

132 *
	`gid_to_«me
();

133 *
	`fûemode
();

134 
	`mode_to_Àâîs
();

135 
mode°r
[11];

137 
	`mode_to_Àâîs
–
öfo_p
->
°_mode
, 
mode°r
 );

139 
	`¥ötf
–"%s" , 
mode°r
 );

140 
	`¥ötf
–"%4d " , (Ë
öfo_p
->
°_∆ök
);

141 
	`¥ötf
–"%-8†" , 
	`uid_to_«me
(
öfo_p
->
°_uid
) );

142 
	`¥ötf
–"%-8†" , 
	`gid_to_«me
(
öfo_p
->
°_gid
) );

143 
	`¥ötf
–"%8ld " , ()
öfo_p
->
°_size
);

144 
	`¥ötf
–"%.12†", 4+
	`˘ime
(&
öfo_p
->
°_mtime
));

145 
	`¥ötf
–"%s\n" , 
fûíame
 );

146 
	}
}

157 
	$mode_to_Àâîs
–
mode
, 
°r
[] )

159 
	`°r˝y
(
°r
, "----------");

161 i‡–
	`S_ISDIR
(
mode
ËË
°r
[0] = 'd';

162 i‡–
	`S_ISCHR
(
mode
ËË
°r
[0] = 'c';

163 i‡–
	`S_ISBLK
(
mode
ËË
°r
[0] = 'b';

165 i‡–
mode
 & 
S_IRUSR
 ) 
°r
[1] = 'r';

166 i‡–
mode
 & 
S_IWUSR
 ) 
°r
[2] = 'w';

167 i‡–
mode
 & 
S_IXUSR
 ) 
°r
[3] = 'x';

169 i‡–
mode
 & 
S_IRGRP
 ) 
°r
[4] = 'r';

170 i‡–
mode
 & 
S_IWGRP
 ) 
°r
[5] = 'w';

171 i‡–
mode
 & 
S_IXGRP
 ) 
°r
[6] = 'x';

173 i‡–
mode
 & 
S_IROTH
 ) 
°r
[7] = 'r';

174 i‡–
mode
 & 
S_IWOTH
 ) 
°r
[8] = 'w';

175 i‡–
mode
 & 
S_IXOTH
 ) 
°r
[9] = 'x';

176 
	}
}

182 *
	$uid_to_«me
(
uid_t
 
uid
)

184 
∑sswd
 *
	`gëpwuid
();

185 
∑sswd
 *
pw_±r
;

186 
num°r
[10];

188 i‡(–
pw_±r
 = 
	`gëpwuid
–
uid
 )Ë=
NULL
)

190 
	`•rötf
(
num°r
,"%d", 
uid
);

191  
num°r
;

195  
pw_±r
->
pw_«me
;

198  
NULL
;

199 
	}
}

205 *
	$gid_to_«me
–
gid_t
 
gid
 )

207 
group
 *
	`gëgrgid
();

208 
group
 *
gΩ_±r
;

209 
num°r
[10];

211 i‡––
gΩ_±r
 = 
	`gëgrgid
(
gid
ËË=
NULL
 )

213 
	`•rötf
(
num°r
,"%d", 
gid
);

214  
num°r
;

218  
gΩ_±r
->
gr_«me
;

220  
NULL
;

221 
	}
}

	@mkdir/imkdir.c

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

21 
	~<uni°d.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<dúít.h
>

24 
	~<sys/°©.h
>

25 
	~<˘y≥.h
>

30 
	mR_TRUE
,

31 
	mR_FALSE


32 }
	tExô_Code
;

34 
check_«me
(*
«me
);

35 
do_mkdú
(*
dú
);

37 
	$maö
(
¨gc
, *
¨gv
[])

39 i‡(
¨gc
 < 2)

41 
	`≥º‹
("Usage: missingÇew directoryÇame\n");

42 
	`exô
(1);

45 i‡(
	`check_«me
(
¨gv
[1]Ë=
R_FALSE
)

47 
	`≥º‹
("valdlity directoryÇame\n");

50 
	`do_mkdú
(
¨gv
[1]);

51 
	`¥ötf
("Finish...\n");

54 
	}
}

62 
	$do_mkdú
(*
dú
)

64 i‡(!(*
dú
))

68 
	`mkdú
(
dú
, 
S_IRWXU
);

69 
	}
}

79 
	$check_«me
(*
«me
)

81 i‡(!
«me
)

83  
R_FALSE
;

86 * 
ck
 = 
«me
;

88 i‡(
	`isdigô
(*
ck
))

90  
R_FALSE
;

93 *
ck
)

95 i‡(*
ck
 =' ' || *ck ='=' || !(
	`iß um
(*ck)))

97  
R_FALSE
;

99 
ck
++;

101  
R_TRUE
;

102 
	}
}

	@more/more.c

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<uni°d.h
>

20 
	~<°rög.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<dúít.h
>

23 
	~<sig«l.h
>

24 
	~<sys/io˘l.h
>

25 
	~<ãrmios.h
>

28 
	#LINELEN
 512

	)

30 
do_m‹e
(
FILE
 *);

31 
£e_m‹e
(
FILE
 *);

32 
n⁄ïröt
();

33 
sig_wöch
();

34 
¥_wösize
();

36 
wösize
 
	gsize
;

38 
	$maö
 (
¨gc
, *
¨gv
[])

40 
FILE
 *
Â
;

41 if(
	`sig«l
(
SIGWINCH
,
sig_wöch
Ë=
SIG_ERR
)

43 
	`≥º‹
("Signal Error");

45 
	`¥_wösize
(1);

46 i‡–
¨gc
 == 1 )

48 
	`do_m‹e
(
°dö
);

53 --
¨gc
)

55 if((
Â
=
	`f›í
(*++
¨gv
,"r")Ë!
NULL
)

57 
	`do_m‹e
(
Â
);

58 
	`f˛o£
(
Â
);

62 
	`exô
(1);

66  
EXIT_SUCCESS
;

67 
	}
}

74 
	$do_m‹e
(
FILE
 *
Â
)

76 
löe
[
LINELEN
];

77 
num_of_löes
 = 0;

78 
ª∂y
;

79 
FILE
 *
Â_ây
;

80 
Â_ây
 = 
	`f›í
( "/dev/tty" , "r");

81 i‡(
Â_ây
 =
NULL
)

82 
	`exô
(1);

84 
	`fgës
–
löe
,
LINELEN
,
Â
))

86 if–
num_of_löes
 =(
size
.
ws_row
 - 2))

88 
ª∂y
 = 
	`£e_m‹e
(
Â_ây
);

89 
	`n⁄ïröt
(0);

90 if–
ª∂y
 == 0)

94 
num_of_löes
-=
ª∂y
;

97 if(
	`Âuts
 (
löe
,
°dout
Ë=
EOF
)

98 
	`exô
(1);

99 
num_of_löes
++;

101 
	}
}

103 
	$£e_m‹e
(
FILE
 *
cmd
)

105 
c
;

106 
	`sy°em
 ("stty -F /dev/tty cbreak");

107 
	`¥ötf
("/033[7m more? /033[m");

108 
	`n⁄ïröt
(1);

109 (
c
=
	`gëc
(
cmd
)Ë!
EOF
)

111 if(
c
 == 'q')

113 
	`¥ötf
("/n");

116 if(
c
 == ' ')

119 
	`¥ötf
("/n");

120  
size
.
ws_row
;

122 if(
c
 == '\n')

124 
	`¥ötf
("/33[7D/33[K");

128 
	`sy°em
 ("stty -F /dev/tty -cbreak");

130 
	}
}

132 
	$n⁄ïröt
(
Êag
)

134 
ãrmios
 
öô_£âög
;

135 
ãrmios
 
≥nd_£âög
;

137 i‡(
	`tcgë©å
(1, &
öô_£âög
) < 0)

139 
	`≥º‹
("GettingÅheáttribute Error!");

140 
	`exô
 (1);

142 
≥nd_£âög
 = 
öô_£âög
;

143 if(
Êag
 == 1)

144 
≥nd_£âög
.
c_lÊag
 &~
ECHO
;

146 
≥nd_£âög
.
c_lÊag
 |
ECHO
;

147 
	`tc£èâr
 (1, 
TCSANOW
, &
≥nd_£âög
);

148 
	}
}

150 
	$¥_wösize
(
fd
)

152 if(
	`io˘l
(
fd
,
TIOCGWINSZ
, (*)&
size
) < 0)

154 
	`≥º‹
("TIOCGWINSZ Error!");

156 
	}
}

158 
	$sig_wöch
(
signo
)

160 
	`¥_wösize
(1);

161 
	}
}

	@proc/iproc.c

30 
	~<°dio.h
>

31 
	~<°dlib.h
>

32 
	~<uni°d.h
>

33 
	~<f˙é.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<sys/°©.h
>

36 
	~<°rög.h
>

38 
	#¥ogøm_«me
 "ùroc"

	)

40 
	#R_TRUE
 0

	)

42 
	#R_FALSE
 1

	)

44 
	#NUM_CMD
 7

	)

46 
	#BUF_SIZE
 64

	)

48 
öfo_˝u
();

49 
öfo_mem
();

50 
öfo_mou¡
();

51 
öfo_sw≠
();

52 
öfo_kî√l_vîsi⁄
();

53 
öfo_u±ime
();

54 
öfo_devi˚s
();

56 (*
	ga˘i⁄_èbÀ
[
NUM_CMD
])(Ë{
öfo_˝u
, 
öfo_mem
,

57 
öfo_mou¡
, 
öfo_sw≠
,

58 
öfo_kî√l_vîsi⁄
,

59 
öfo_u±ime
, 
öfo_devi˚s
};

69 *
	gcmd_èbÀ
[
NUM_CMD
] = {"-c", "-m", "-M", "-s", "-v", "-u", "-d"};

71 
ußge
(
°©us
);

74 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

76 i‡(
¨gc
 < 2)

78 
	`ußge
(1);

81 
i
;

82 
j
;

83 
i
 = 1; i < 
¨gc
; i++)

85 
j
 = 0; j < 
NUM_CMD
; j++)

87 i‡(
	`°rcmp
(
¨gv
[
i
], 
cmd_èbÀ
[
j
]) == 0)

89 
a˘i⁄_èbÀ
[
j
]();

94 
	}
}

96 
	$ußge
(
°©us
)

98 i‡(
°©us
 !
R_TRUE
)

99 
	`Ârötf
 (
°dîr
, ("Try `%s --help' for more information.\n"),

100 
¥ogøm_«me
);

103 
	`¥ötf
 (("Ußge: %†[OPTION]...\n"), 
¥ogøm_«me
);

104 
	`¥ötf
(("%s\n%s\n%s\n%s\n%s\n%s\n%s\n"), "\nprint informationábout current system\n",

112 
	`exô
 (
°©us
);

113 
	}
}

118 
	$öfo_˝u
()

120 
ªad_size
 = 0;

121 
buf
[
BUF_SIZE
];

122 
fd
;

123 i‡((
fd
 = 
	`›í
("/¥oc/˝uöfo", 
O_RDONLY
)) == -1)

125 
	`≥º‹
("can'tÑead /proc/cpuinfo,Ölease check it'sÖermision\n");

126 
	`exô
(1);

129 (
ªad_size
 = 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) != 0)

131 
buf
[
ªad_size
] = '\0';

132 
	`¥ötf
("%s", 
buf
);

134 
	`˛o£
(
fd
);

136 
	}
}

141 
	$öfo_mem
()

143 
ªad_size
 = 0;

144 
buf
[
BUF_SIZE
];

145 
fd
;

146 i‡((
fd
 = 
	`›í
("/¥oc/memöfo", 
O_RDONLY
)) == -1)

148 
	`≥º‹
("can'tÑead /proc/meminfo,Ölease check it'sÖermision\n");

149 
	`exô
(1);

152 (
ªad_size
 = 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) != 0)

154 
buf
[
ªad_size
] = '\0';

155 
	`¥ötf
("%s", 
buf
);

157 
	`˛o£
(
fd
);

158 
	}
}

163 
	$öfo_mou¡
()

165 
ªad_size
 = 0;

166 
buf
[
BUF_SIZE
];

167 
fd
;

168 i‡((
fd
 = 
	`›í
("/¥oc/mou¡s", 
O_RDONLY
)) == -1)

170 
	`≥º‹
("can'tÑead /proc/mounts,Ölease check it'sÖermision\n");

171 
	`exô
(1);

174 (
ªad_size
 = 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) != 0)

176 
buf
[
ªad_size
] = '\0';

177 
	`¥ötf
("%s", 
buf
);

179 
	`˛o£
(
fd
);

180 
	}
}

185 
	$öfo_sw≠
()

187 
ªad_size
 = 0;

188 
buf
[
BUF_SIZE
];

189 
fd
;

190 i‡((
fd
 = 
	`›í
("/¥oc/sw≠s", 
O_RDONLY
)) == -1)

192 
	`≥º‹
("can'tÑead /proc/swaps,Ölease check it'sÖermision\n");

193 
	`exô
(1);

196 (
ªad_size
 = 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) != 0)

198 
buf
[
ªad_size
] = '\0';

199 
	`¥ötf
("%s", 
buf
);

201 
	`˛o£
(
fd
);

202 
	}
}

207 
	$öfo_kî√l_vîsi⁄
()

209 
ªad_size
 = 0;

210 
buf
[
BUF_SIZE
];

211 
fd
;

212 i‡((
fd
 = 
	`›í
("/¥oc/vîsi⁄", 
O_RDONLY
)) == -1)

214 
	`≥º‹
("can'tÑead /proc/version,Ölease check it'sÖermision\n");

215 
	`exô
(1);

218 (
ªad_size
 = 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) != 0)

220 
buf
[
ªad_size
] = '\0';

221 
	`¥ötf
("%s", 
buf
);

223 
	`˛o£
(
fd
);

224 
	}
}

229 
	$öfo_u±ime
()

231 
ªad_size
 = 0;

232 
buf
[
BUF_SIZE
];

233 
fd
;

234 i‡((
fd
 = 
	`›í
("/¥oc/u±ime", 
O_RDONLY
)) == -1)

236 
	`≥º‹
("can'tÑead /proc/uptime,Ölease check it'sÖermision\n");

237 
	`exô
(1);

240 (
ªad_size
 = 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) != 0)

242 
buf
[
ªad_size
] = '\0';

243 
	`¥ötf
("%s", 
buf
);

245 
	`˛o£
(
fd
);

246 
	}
}

251 
	$öfo_devi˚s
()

253 
ªad_size
 = 0;

254 
buf
[
BUF_SIZE
];

255 
fd
;

256 i‡((
fd
 = 
	`›í
("/¥oc/devi˚s", 
O_RDONLY
)) == -1)

258 
	`≥º‹
("can'tÑead /proc/devices,Ölease check it'sÖermision\n");

259 
	`exô
(1);

262 (
ªad_size
 = 
	`ªad
(
fd
, 
buf
, 
BUF_SIZE
)) != 0)

264 
buf
[
ªad_size
] = '\0';

265 
	`¥ötf
("%s", 
buf
);

267 
	`˛o£
(
fd
);

268 
	}
}

	@pwd/ipwd.c

19 
	~<°dio.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<sys/°©.h
>

22 
	~<dúít.h
>

23 
	~<uni°d.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

27 
öo_t
 
gë_öode
(*);

28 
¥öç©hto
(
öo_t
);

29 
öum_to_«me
(
öo_t
 , *, );

31 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

33 
	`¥öç©hto
–
	`gë_öode
( "." ) );

34 
	`putch¨
('\n');

36 
	}
}

42 
	$¥öç©hto
–
öo_t
 
this_öode
 )

44 
öo_t
 
my_öode
 ;

45 
ôs_«me
[
BUFSIZ
];

47 i‡–
	`gë_öode
(".."Ë!
this_öode
 )

49 
	`chdú
( ".." );

51 
	`öum_to_«me
(
this_öode
,
ôs_«me
,
BUFSIZ
);

53 
my_öode
 = 
	`gë_öode
( "." );

54 
	`¥öç©hto
–
my_öode
 );

55 
	`¥ötf
("/%s", 
ôs_«me
 );

57 
	}
}

63 
	$öum_to_«me
(
öo_t
 
öode_to_föd
 , *
«mebuf
, 
buÊí
)

65 
DIR
 *
dú_±r
;

66 
dúít
 *
dúíç
;

68 
dú_±r
 = 
	`›ídú
( "." );

69 i‡–
dú_±r
 =
NULL
 )

71 
	`≥º‹
( "." );

72 
	`exô
(1);

76  ( 
dúíç
 = 
	`ªaddú
–
dú_±r
 ) ) !
NULL
 )

78 i‡–
dúíç
->
d_öo
 =
öode_to_föd
 )

80 
	`°∫˝y
–
«mebuf
, 
dúíç
->
d_«me
, 
buÊí
);

81 
«mebuf
[
buÊí
-1] = '\0';

82 
	`˛o£dú
–
dú_±r
 );

86 
	`Ârötf
(
°dîr
, "îr‹Üookög f‹ inum %d\n", ()
öode_to_föd
);

87 
	`exô
(1);

88 
	}
}

93 
öo_t
 
	$gë_öode
–*
‚ame
 )

95 
°©
 
öfo
;

97 i‡–
	`°©
–
‚ame
 , &
öfo
 ) == -1 )

99 
	`Ârötf
(
°dîr
, "Cannot stat ");

100 
	`≥º‹
(
‚ame
);

101 
	`exô
(1);

103  
öfo
.
°_öo
;

104 
	}
}

	@rm/irm.c

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<dúít.h
>

21 
	~<uni°d.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<˘y≥.h
>

24 
	~<sys/°©.h
>

25 
	~<°rög.h
>

27 
	#R_TRUE
 0

	)

28 
	#R_FALSE
 -1

	)

36 
	$do_rm_fûes
(*
fûe
)

38 i‡(!(*
fûe
))

40  
R_FALSE
;

42  
	`ªmove
(
fûe
);

43 
	}
}

51 
	$do_rm_em±y_dús
(*
dú
)

53 i‡(!(*
dú
))

55  
R_FALSE
;

58  
	`rmdú
(
dú
);

59 
	}
}

67 
	$do_rm_no_em±y_dús
(*
dú
)

69 i‡(!(*
dú
))

71  
R_FALSE
;

73 *
cmd
 = (*)
	`mÆloc
((Ë* (8 + 
	`°æí
(
dú
)));

74 
	`°r˝y
(
cmd
, "rm -rf ");

75 
	`°rˇt
(
cmd
, 
dú
);

76  
	`sy°em
(
cmd
);

77 
	}
}

79 
	$maö
(
¨gc
, *
¨gv
[])

81 i‡(
¨gc
 < 2)

83 
	`≥º‹
("Usage: missing directory or fileÇames\n");

84 
	`exô
(1);

87 
i
;

88 
rm_em±y_Êag
 = 0;

89 
rm_no_em±y_Êag
 = 0;

90 
i
 = 1; i < 
¨gc
; i++)

92 i‡(
	`°r°r
(
¨gv
[
i
], "-d"Ë!
NULL
)

94 
rm_em±y_Êag
 = 1;

96 i‡(
	`°r°r
(
¨gv
[
i
], "-D"Ë!
NULL
)

98 
rm_no_em±y_Êag
 = 1;

102 
i
 = 1; i < 
¨gc
; i++)

104 i‡(
	`°rcmp
(
¨gv
[
i
], "-d") == 0 || strcmp(argv[i], "-D") == 0)

108 i‡(1 =
rm_no_em±y_Êag
)

110 i‡(
	`do_rm_no_em±y_dús
(
¨gv
[
i
]Ë=
R_FALSE
)

112 
	`¥ötf
("\nU«bÀÅÿdñëêdúe˘‹y %s\n", 
¨gv
[
i
]);

115 i‡(0 =
rm_no_em±y_Êag
 && 1 =
rm_em±y_Êag
)

117 i‡(
	`do_rm_em±y_dús
(
¨gv
[
i
]Ë=
R_FALSE
)

119 
	`¥ötf
("\nU«bÀÅÿdñëêdúe˘‹y %s\n", 
¨gv
[
i
]);

122 i‡(0 =
rm_em±y_Êag
 && 0 =
rm_no_em±y_Êag
)

124 i‡(
	`do_rm_fûes
(
¨gv
[
i
]Ë!
R_TRUE
)

126 
	`¥ötf
("u«bÀÅÿdñëêfûê%s\n", 
¨gv
[
i
]);

131 
	`¥ötf
("Finish...\n");

133 
	}
}

	@uname/system.h

18 
	~<Æloˇ.h
>

22 #i‡2 <
__GLIBC__
 && 2 <
__GLIBC_MINOR__


23 #i‡! 
deföed
 
_SYS_TYPES_H


24 
you
 
mu°
 
	gö˛ude
 <
	gsys
/
	gty≥s
.
	gh
> 
bef‹e
 
ö˛udög
 
this
 
	gfûe


28 
	~<sys/°©.h
>

30 #i‡!
deföed
 
HAVE_MKFIFO


31 
	#mkfifo
(
∑th
, 
mode
Ë(
	`mknod
 (’©h), (modeË| 
S_IFIFO
, 0))

	)

34 #i‡
HAVE_SYS_PARAM_H


35 
	~<sys/∑øm.h
>

40 #i‡
HAVE_UNISTD_H


41 
	~<uni°d.h
>

44 #i‚de‡
STDIN_FILENO


45 
	#STDIN_FILENO
 0

	)

48 #i‚de‡
STDOUT_FILENO


49 
	#STDOUT_FILENO
 1

	)

52 #i‚de‡
STDERR_FILENO


53 
	#STDERR_FILENO
 2

	)

59 
	~<limôs.h
>

61 
	~"∑thmax.h
"

62 
	~"loˇÀdú.h
"

64 #i‡
TIME_WITH_SYS_TIME


65 
	~<sys/time.h
>

66 
	~<time.h
>

68 #i‡
HAVE_SYS_TIME_H


69 
	~<sys/time.h
>

71 
	~<time.h
>

76 #i‡
MAJOR_IN_MKDEV


77 
	~<sys/mkdev.h
>

78 
	#HAVE_MAJOR


	)

80 #i‡
MAJOR_IN_SYSMACROS


81 
	~<sys/sysma¸os.h
>

82 
	#HAVE_MAJOR


	)

84 #ifde‡
maj‹


85 
	#HAVE_MAJOR


	)

88 #i‚de‡
HAVE_MAJOR


89 
	#maj‹
(
dev
Ë(((devË>> 8Ë& 0xff)

	)

90 
	#mö‹
(
dev
Ë((devË& 0xff)

	)

91 
	#makedev
(
maj
, 
mö
Ë(((majË<< 8Ë| (mö))

	)

93 #unde‡
HAVE_MAJOR


95 #i‡
HAVE_UTIME_H


96 
	~<utime.h
>

101 #i‚de‡
HAVE_STRUCT_UTIMBUF


102 
	sutimbuf


104 
	ma˘ime
;

105 
	mmodtime
;

112 
	~<°rög.h
>

113 #i‡! 
HAVE_DECL_MEMRCHR


114 *
memrchr
 (c⁄° *, , 
size_t
);

117 
	~<î∫o.h
>

118 #i‚de‡
î∫o


119 
î∫o
;

123 #i‚de‡
ENOSYS


124 
	#ENOSYS
 (-1)

	)

126 #i‚de‡
ENOTSUP


127 
	#ENOTSUP
 (-1)

	)

129 #i‚de‡
EISDIR


130 
	#EISDIR
 (-1)

	)

133 
	~<°dboﬁ.h
>

135 
	#gë›t
 
sy°em_gë›t


	)

136 
	~<°dlib.h
>

137 #unde‡
gë›t


142 #i‡!
EXIT_FAILURE


143 #unde‡
EXIT_FAILURE


144 
	#EXIT_FAILURE
 1

	)

147 #i‚de‡
EXIT_SUCCESS


148 
	#EXIT_SUCCESS
 0

	)

155 
	mEXIT_FAIL
 = 1,

156 
	mEXIT_CANNOT_INVOKE
 = 126,

157 
	mEXIT_ENOENT
 = 127

160 
	~"exôÁû.h
"

163 
ölöe
 

164 
	$öôülize_exô_Áûuª
 (
°©us
)

166 i‡(
°©us
 !
EXIT_FAILURE
)

167 
exô_Áûuª
 = 
°©us
;

168 
	}
}

170 #i‡
HAVE_FCNTL_H


171 
	~<f˙é.h
>

173 
	~<sys/fûe.h
>

176 #i‡!
deföed
 
SEEK_SET


177 
	#SEEK_SET
 0

	)

178 
	#SEEK_CUR
 1

	)

179 
	#SEEK_END
 2

	)

181 #i‚de‡
F_OK


182 
	#F_OK
 0

	)

183 
	#X_OK
 1

	)

184 
	#W_OK
 2

	)

185 
	#R_OK
 4

	)

190 #i‡!
deföed
 
O_BINARY
 && deföed 
_O_BINARY


192 
	#O_BINARY
 
_O_BINARY


	)

193 
	#O_TEXT
 
_O_TEXT


	)

196 #i‡!
deföed
 
O_NDELAY


197 
	#O_NDELAY
 0

	)

200 #i‡!
deföed
 
O_NONBLOCK


201 
	#O_NONBLOCK
 
O_NDELAY


	)

204 #i‡!
deföed
 
O_NOCTTY


205 
	#O_NOCTTY
 0

	)

208 #ifde‡
__BEOS__


210 #unde‡
O_BINARY


211 #unde‡
O_TEXT


214 #i‡
O_BINARY


215 #i‚de‡
__DJGPP__


216 
	#£tmode
 
_£tmode


	)

217 
	#fûío
(
_Â
Ë
	`_fûío
 (_Â)

	)

219 
	#SET_MODE
(
_f
, 
_m
Ë
	`£tmode
 (_f, _m)

	)

220 
	#SET_BINARY
(
_f
Ëdÿ{i‡(!
	`ißây
(_f)Ë
	`£tmode
 (_f, 
O_BINARY
);} 0)

	)

221 
	#SET_BINARY2
(
_f1
, 
_f2
) \

223 i‡(!
	`ißây
 (
_f1
)) \

225 
	`£tmode
 (
_f1
, 
O_BINARY
); \

226 i‡(!
	`ißây
 (
_f2
)) \

227 
	`£tmode
 (
_f2
, 
O_BINARY
); \

229 } 0)

	)

231 
	#SET_MODE
(
_f
, 
_m
Ë()0

	)

232 
	#SET_BINARY
(
f
Ë()0

	)

233 
	#SET_BINARY2
(
f1
,
f2
Ë()0

	)

234 
	#O_BINARY
 0

	)

235 
	#O_TEXT
 0

	)

238 #i‡
HAVE_DIRENT_H


239 
	~<dúít.h
>

240 
	#NLENGTH
(
dúe˘
Ë(
	`°æí
((dúe˘)->
d_«me
))

	)

242 
	#dúít
 
dúe˘


	)

243 
	#NLENGTH
(
dúe˘
Ë((dúe˘)->
d_«mÀn
)

	)

244 #i‡
HAVE_SYS_NDIR_H


245 
	~<sys/ndú.h
>

247 #i‡
HAVE_SYS_DIR_H


248 
	~<sys/dú.h
>

250 #i‡
HAVE_NDIR_H


251 
	~<ndú.h
>

255 #i‡
CLOSEDIR_VOID


257 
	#CLOSEDIR
(
d
Ë(
	`˛o£dú
 (d), 0)

	)

259 
	#CLOSEDIR
(
d
Ë
	`˛o£dú
 (d)

	)

264 #i‡!
deföed
 
DEV_BSIZE
 && deföed 
BSIZE


265 
	#DEV_BSIZE
 
BSIZE


	)

267 #i‡!
deföed
 
DEV_BSIZE
 && deföed 
BBSIZE


268 
	#DEV_BSIZE
 
BBSIZE


	)

270 #i‚de‡
DEV_BSIZE


271 
	#DEV_BSIZE
 4096

	)

278 #i‚de‡
HAVE_STRUCT_STAT_ST_BLOCKS


279 
	#ST_BLKSIZE
(
°©buf
Ë
DEV_BSIZE


	)

280 #i‡
deföed
 
_POSIX_SOURCE
 || !deföed 
BSIZE


281 
	#ST_NBLOCKS
(
°©buf
) \

282 ((
°©buf
).
°_size
 / 
ST_NBLOCKSIZE
 + ((°©buf).°_sizê% ST_NBLOCKSIZE !0))

	)

284 
	#ST_NBLOCKS
(
°©buf
) \

285 (
	`S_ISREG
 ((
°©buf
).
°_mode
) \

286 || 
	`S_ISDIR
 ((
°©buf
).
°_mode
) \

287 ? 
	`°_blocks
 ((
°©buf
).
°_size
Ë: 0)

	)

296 
	#ST_BLKSIZE
(
°©buf
Ë((0 < (°©buf).
°_blksize
 \

297 && (
°©buf
).
°_blksize
 <= (1 << 22)) \

298 ? (
°©buf
).
°_blksize
 : 
DEV_BSIZE
)

	)

299 #i‡
deföed
 
hpux
 || deföed 
__hpux__
 || deföed 
__hpux


302 
	#ST_NBLOCKSIZE
 1024

	)

304 #i‡
deföed
 
_AIX
 && deföed 
_I386


306 
	#ST_NBLOCKSIZE
 (4 * 1024)

	)

308 #i‡
deföed
 
_CRAY


309 
	#ST_NBLOCKS
(
°©buf
) \

310 (
	`S_ISREG
 ((
°©buf
).
°_mode
) \

311 || 
	`S_ISDIR
 ((
°©buf
).
°_mode
) \

312 ? (
°©buf
).
°_blocks
 * 
	`ST_BLKSIZE
(°©buf)/
ST_NBLOCKSIZE
 : 0)

	)

318 #i‚de‡
ST_NBLOCKS


319 
	#ST_NBLOCKS
(
°©buf
Ë((°©buf).
°_blocks
)

	)

322 #i‚de‡
ST_NBLOCKSIZE


323 
	#ST_NBLOCKSIZE
 512

	)

328 #i‚de‡
öôülize_maö


329 
	#öôülize_maö
(
ac
, 
av
)

	)

332 #i‚de‡
S_IFMT


333 
	#S_IFMT
 0170000

	)

336 #i‡
STAT_MACROS_BROKEN


337 #unde‡
S_ISBLK


338 #unde‡
S_ISCHR


339 #unde‡
S_ISDIR


340 #unde‡
S_ISDOOR


341 #unde‡
S_ISFIFO


342 #unde‡
S_ISLNK


343 #unde‡
S_ISNAM


344 #unde‡
S_ISMPB


345 #unde‡
S_ISMPC


346 #unde‡
S_ISNWK


347 #unde‡
S_ISREG


348 #unde‡
S_ISSOCK


352 #i‚de‡
S_ISBLK


353 #ifde‡
S_IFBLK


354 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
)

	)

356 
	#S_ISBLK
(
m
Ë0

	)

360 #i‚de‡
S_ISCHR


361 #ifde‡
S_IFCHR


362 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
)

	)

364 
	#S_ISCHR
(
m
Ë0

	)

368 #i‚de‡
S_ISDIR


369 #ifde‡
S_IFDIR


370 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

372 
	#S_ISDIR
(
m
Ë0

	)

376 #i‚de‡
S_ISDOOR


377 #ifde‡
S_IFDOOR


378 
	#S_ISDOOR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDOOR
)

	)

380 
	#S_ISDOOR
(
m
Ë0

	)

384 #i‚de‡
S_ISFIFO


385 #ifde‡
S_IFIFO


386 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
)

	)

388 
	#S_ISFIFO
(
m
Ë0

	)

392 #i‚de‡
S_ISLNK


393 #ifde‡
S_IFLNK


394 
	#S_ISLNK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFLNK
)

	)

396 
	#S_ISLNK
(
m
Ë0

	)

400 #i‚de‡
S_ISMPB


401 #ifde‡
S_IFMPB


402 
	#S_ISMPB
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFMPB
)

	)

403 
	#S_ISMPC
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFMPC
)

	)

405 
	#S_ISMPB
(
m
Ë0

	)

406 
	#S_ISMPC
(
m
Ë0

	)

410 #i‚de‡
S_ISNAM


411 #ifde‡
S_IFNAM


412 
	#S_ISNAM
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFNAM
)

	)

414 
	#S_ISNAM
(
m
Ë0

	)

418 #i‚de‡
S_ISNWK


419 #ifde‡
S_IFNWK


420 
	#S_ISNWK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFNWK
)

	)

422 
	#S_ISNWK
(
m
Ë0

	)

426 #i‚de‡
S_ISREG


427 #ifde‡
S_IFREG


428 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
)

	)

430 
	#S_ISREG
(
m
Ë0

	)

434 #i‚de‡
S_ISSOCK


435 #ifde‡
S_IFSOCK


436 
	#S_ISSOCK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFSOCK
)

	)

438 
	#S_ISSOCK
(
m
Ë0

	)

443 #i‚de‡
S_TYPEISSEM


444 #ifde‡
S_INSEM


445 
	#S_TYPEISSEM
(
p
Ë(
	`S_ISNAM
 (’)->
°_mode
Ë&& (p)->
°_rdev
 =
S_INSEM
)

	)

447 
	#S_TYPEISSEM
(
p
Ë0

	)

451 #i‚de‡
S_TYPEISSHM


452 #ifde‡
S_INSHD


453 
	#S_TYPEISSHM
(
p
Ë(
	`S_ISNAM
 (’)->
°_mode
Ë&& (p)->
°_rdev
 =
S_INSHD
)

	)

455 
	#S_TYPEISSHM
(
p
Ë0

	)

459 #i‚de‡
S_TYPEISMQ


460 
	#S_TYPEISMQ
(
p
Ë0

	)

466 #i‡!
S_ISUID


467 
	#S_ISUID
 04000

	)

469 #i‡!
S_ISGID


470 
	#S_ISGID
 02000

	)

474 #i‚de‡
S_ISVTX


475 
	#S_ISVTX
 01000

	)

478 #i‡!
S_IRUSR
 && 
S_IREAD


479 
	#S_IRUSR
 
S_IREAD


	)

481 #i‡!
S_IRUSR


482 
	#S_IRUSR
 00400

	)

484 #i‡!
S_IRGRP


485 
	#S_IRGRP
 (
S_IRUSR
 >> 3)

	)

487 #i‡!
S_IROTH


488 
	#S_IROTH
 (
S_IRUSR
 >> 6)

	)

491 #i‡!
S_IWUSR
 && 
S_IWRITE


492 
	#S_IWUSR
 
S_IWRITE


	)

494 #i‡!
S_IWUSR


495 
	#S_IWUSR
 00200

	)

497 #i‡!
S_IWGRP


498 
	#S_IWGRP
 (
S_IWUSR
 >> 3)

	)

500 #i‡!
S_IWOTH


501 
	#S_IWOTH
 (
S_IWUSR
 >> 6)

	)

504 #i‡!
S_IXUSR
 && 
S_IEXEC


505 
	#S_IXUSR
 
S_IEXEC


	)

507 #i‡!
S_IXUSR


508 
	#S_IXUSR
 00100

	)

510 #i‡!
S_IXGRP


511 
	#S_IXGRP
 (
S_IXUSR
 >> 3)

	)

513 #i‡!
S_IXOTH


514 
	#S_IXOTH
 (
S_IXUSR
 >> 6)

	)

517 #i‡!
S_IRWXU


518 
	#S_IRWXU
 (
S_IRUSR
 | 
S_IWUSR
 | 
S_IXUSR
)

	)

520 #i‡!
S_IRWXG


521 
	#S_IRWXG
 (
S_IRGRP
 | 
S_IWGRP
 | 
S_IXGRP
)

	)

523 #i‡!
S_IRWXO


524 
	#S_IRWXO
 (
S_IROTH
 | 
S_IWOTH
 | 
S_IXOTH
)

	)

528 #i‡!
S_IXUGO


529 
	#S_IXUGO
 (
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

532 #i‚de‡
S_IRWXUGO


533 
	#S_IRWXUGO
 (
S_IRWXU
 | 
S_IRWXG
 | 
S_IRWXO
)

	)

537 
	#CHMOD_MODE_BITS
 \

538 (
S_ISUID
 | 
S_ISGID
 | 
S_ISVTX
 | 
S_IRWXU
 | 
S_IRWXG
 | 
S_IRWXO
)

	)

540 
	~"time•ec.h
"

542 #i‚de‡
RETSIGTYPE


543 
	#RETSIGTYPE
 

	)

546 #ifde‡
__DJGPP__


548 
	~<io.h
>

550 
	~<sys/ex˚±n.h
>

553 #i‡
HAVE_STDINT_H


554 
	~<°döt.h
>

557 #i‡
HAVE_INTTYPES_H


558 
	~<öây≥s.h
>

561 #i‡!
deföed
 
PRIdMAX
 || 
PRI_MACROS_BROKEN


562 #unde‡
PRIdMAX


563 
	#PRIdMAX
 ( (
uötmax_t
Ë= (Ë? "ld" : "Œd")

	)

565 #i‡!
deföed
 
PRIoMAX
 || 
PRI_MACROS_BROKEN


566 #unde‡
PRIoMAX


567 
	#PRIoMAX
 ( (
uötmax_t
Ë= (Ë? "lo" : "Œo")

	)

569 #i‡!
deföed
 
PRIuMAX
 || 
PRI_MACROS_BROKEN


570 #unde‡
PRIuMAX


571 
	#PRIuMAX
 ( (
uötmax_t
Ë= (Ë? "lu" : "Œu")

	)

573 #i‡!
deföed
 
PRIxMAX
 || 
PRI_MACROS_BROKEN


574 #unde‡
PRIxMAX


575 
	#PRIxMAX
 ( (
uötmax_t
Ë= (Ë? "lx" : "Œx")

	)

578 
	~<˘y≥.h
>

599 #i‡
STDC_HEADERS
 || (!
deföed
 (
ißscii
Ë&& !
HAVE_ISASCII
)

600 
	#IN_CTYPE_DOMAIN
(
c
Ë1

	)

602 
	#IN_CTYPE_DOMAIN
(
c
Ë
	`ißscii
(c)

	)

605 #ifde‡
isbœnk


606 
	#ISBLANK
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isbœnk
 (c))

	)

608 
	#ISBLANK
(
c
Ë((cË=' ' || (cË='\t')

	)

610 #ifde‡
isgøph


611 
	#ISGRAPH
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isgøph
 (c))

	)

613 
	#ISGRAPH
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`i•röt
 (cË&& !
	`is•a˚
 (c))

	)

617 #unde‡
ISPRINT


619 
	#ISPRINT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`i•röt
 (c))

	)

620 
	#ISALNUM
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`iß um
 (c))

	)

621 
	#ISALPHA
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`ißÕha
 (c))

	)

622 
	#ISCNTRL
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`is˙ål
 (c))

	)

623 
	#ISLOWER
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`i¶owî
 (c))

	)

624 
	#ISPUNCT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`i•un˘
 (c))

	)

625 
	#ISSPACE
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`is•a˚
 (c))

	)

626 
	#ISUPPER
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isuµî
 (c))

	)

627 
	#ISXDIGIT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isxdigô
 (c))

	)

628 
	#ISDIGIT_LOCALE
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isdigô
 (c))

	)

630 #i‡
STDC_HEADERS


631 
	#TOLOWER
(
Ch
Ë
	`tﬁowî
 (Ch)

	)

632 
	#TOUPPER
(
Ch
Ë
	`touµî
 (Ch)

	)

634 
	#TOLOWER
(
Ch
Ë(
	`ISUPPER
 (ChË? 
	`tﬁowî
 (ChË: (Ch))

	)

635 
	#TOUPPER
(
Ch
Ë(
	`ISLOWER
 (ChË? 
	`touµî
 (ChË: (Ch))

	)

645 
	#ISDIGIT
(
c
Ë((Ë(cË- '0' <9)

	)

649 #i‡
HAVE_LOCALE_H


650 
	~<loˇÀ.h
>

652 
	#£éoˇÀ
(
C©eg‹y
, 
LoˇÀ
Ë

	)

655 
	~"gëãxt.h
"

656 #i‡! 
ENABLE_NLS


657 #unde‡
ãxtdomaö


658 
	#ãxtdomaö
(
Domaö«me
Ë

	)

659 #unde‡
bödãxtdomaö


660 
	#bödãxtdomaö
(
Domaö«me
, 
Dú«me
Ë

	)

663 
	#_
(
msgid
Ë
	`gëãxt
 (msgid)

	)

664 
	#N_
(
msgid
Ë
	)
msgid

666 #i‚de‡
HAVE_SETLOCALE


667 
	#HAVE_SETLOCALE
 0

	)

670 
	#STREQ
(
a
, 
b
Ë(
	`°rcmp
 (◊), (b)Ë=0)

	)

672 #i‡!
HAVE_DECL_FREE


673 
‰ì
 ();

676 #i‡!
HAVE_DECL_MALLOC


677 *
mÆloc
 ();

680 #i‡!
HAVE_DECL_MEMCHR


681 *
memchr
 ();

684 #i‡!
HAVE_DECL_REALLOC


685 *
ªÆloc
 ();

688 #i‡!
HAVE_DECL_STPCPY


689 #i‚de‡
°p˝y


690 *
°p˝y
 ();

694 #i‡!
HAVE_DECL_STRNDUP


695 *
°∫dup
 ();

698 #i‡!
HAVE_DECL_STRSTR


699 *
°r°r
 ();

702 #i‡!
HAVE_DECL_GETENV


703 *
gëív
 ();

706 #i‡!
HAVE_DECL_LSEEK


707 
off_t
 
l£ek
 ();

711 #i‡!
HAVE_DECL_STRTOUL


712 
°πoul
 ();

715 #i‡!
HAVE_DECL_GETLOGIN


716 *
gëlogö
 ();

719 #i‡!
HAVE_DECL_TTYNAME


720 *
ây«me
 ();

723 #i‡!
HAVE_DECL_GETEUID


724 
uid_t
 
gëeuid
 ();

727 #i‡!
HAVE_DECL_GETPWUID


728 
∑sswd
 *
gëpwuid
 ();

731 #i‡!
HAVE_DECL_GETGRGID


732 
group
 *
gëgrgid
 ();

735 #i‡!
HAVE_DECL_GETUID


736 
uid_t
 
gëuid
 ();

739 
	~"xÆloc.h
"

741 #i‡! 
deföed
 
HAVE_MEMPCPY
 && ! deföed 
memp˝y


743 
	#memp˝y
(
D
, 
S
, 
N
Ë((*Ë((*Ë
	`mem˝y
 (D, S, NË+ (N)))

	)

747 
	~"u∆ocked-io.h
"

749 
	#SAME_INODE
(
Sèt_buf_1
, 
Sèt_buf_2
) \

750 ((
Sèt_buf_1
).
°_öo
 =(
Sèt_buf_2
).st_ino \

751 && (
Sèt_buf_1
).
°_dev
 =(
Sèt_buf_2
).°_dev)

	)

753 
	#DOT_OR_DOTDOT
(
Ba£«me
) \

754 (
Ba£«me
[0] == '.' && (Basename[1] == '\0' \

755 || (
Ba£«me
[1] ='.' && Ba£«me[2] ='\0')))

	)

757 #i‡
SETVBUF_REVERSED


758 
	#SETVBUF
(
Såóm
, 
Buf„r
, 
Ty≥
, 
Size
) \

759 
	`£tvbuf
 (
Såóm
, 
Ty≥
, 
Buf„r
, 
Size
)

	)

761 
	#SETVBUF
(
Såóm
, 
Buf„r
, 
Ty≥
, 
Size
) \

762 
	`£tvbuf
 (
Såóm
, 
Buf„r
, 
Ty≥
, 
Size
)

	)

772 
	mGETOPT_HELP_CHAR
 = (
CHAR_MIN
 - 2),

773 
	mGETOPT_VERSION_CHAR
 = (
CHAR_MIN
 - 3)

776 
	#GETOPT_HELP_OPTION_DECL
 \

777 "hñp", 
no_¨gumít
, 0, 
GETOPT_HELP_CHAR


	)

778 
	#GETOPT_VERSION_OPTION_DECL
 \

779 "vîsi⁄", 
no_¨gumít
, 0, 
GETOPT_VERSION_CHAR


	)

781 
	#ˇ£_GETOPT_HELP_CHAR
 \

782 
GETOPT_HELP_CHAR
: \

783 
	`ußge
 (
EXIT_SUCCESS
); \

784 ;

	)

786 
	#HELP_OPTION_DESCRIPTION
 \

787 
	`_
(" --hñ∞ di•œyÅhi†hñ∞™dÉxô\n")

	)

788 
	#VERSION_OPTION_DESCRIPTION
 \

789 
	`_
(" --vîsi⁄ ouçuàvîsi⁄ inf‹m©i⁄ándÉxô\n")

	)

791 
	~"˛o£out.h
"

792 
	~"vîsi⁄-ëc.h
"

794 
	#ˇ£_GETOPT_VERSION_CHAR
(
Progøm_«me
, 
Auth‹s
) \

795 
GETOPT_VERSION_CHAR
: \

796 
	`vîsi⁄_ëc
 (
°dout
, 
Progøm_«me
, 
PACKAGE
, 
VERSION
, 
Auth‹s
, \

797 (*Ë
NULL
); \

798 
	`exô
 (
EXIT_SUCCESS
); \

799 ;

	)

801 #i‚de‡
MAX


802 
	#MAX
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

805 #i‚de‡
MIN


806 
	#MIN
(
a
,
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

809 #i‚de‡
CHAR_BIT


810 
	#CHAR_BIT
 8

	)

814 
	#TYPE_SIGNED
(
t
Ë(! (—Ë0 < (tË-1))

	)

817 
	#TYPE_MINIMUM
(
t
Ë(—Ë(
	`TYPE_SIGNED
 (t) \

818 ? ~ (
t
Ë0 << ( (tË* 
CHAR_BIT
 - 1Ë: (tË0))

	)

819 
	#TYPE_MAXIMUM
(
t
Ë(—Ë(~ (tË0 - 
	`TYPE_MINIMUM
 (t)))

	)

824 
	#INT_STRLEN_BOUND
(
t
Ë(( (tË* 
CHAR_BIT
 - 1Ë* 302 / 1000 + 2)

	)

826 #i‚de‡
CHAR_MIN


827 
	#CHAR_MIN
 
	`TYPE_MINIMUM
 ()

	)

830 #i‚de‡
CHAR_MAX


831 
	#CHAR_MAX
 
	`TYPE_MAXIMUM
 ()

	)

834 #i‚de‡
SCHAR_MIN


835 
	#SCHAR_MIN
 (-1 - 
SCHAR_MAX
)

	)

838 #i‚de‡
SCHAR_MAX


839 
	#SCHAR_MAX
 (
CHAR_MAX
 =
UCHAR_MAX
 ? CHAR_MAX / 2 : CHAR_MAX)

	)

842 #i‚de‡
UCHAR_MAX


843 
	#UCHAR_MAX
 
	`TYPE_MAXIMUM
 ()

	)

846 #i‚de‡
SHRT_MIN


847 
	#SHRT_MIN
 
	`TYPE_MINIMUM
 ()

	)

850 #i‚de‡
SHRT_MAX


851 
	#SHRT_MAX
 
	`TYPE_MAXIMUM
 ()

	)

854 #i‚de‡
INT_MAX


855 
	#INT_MAX
 
	`TYPE_MAXIMUM
 ()

	)

858 #i‚de‡
INT_MIN


859 
	#INT_MIN
 
	`TYPE_MINIMUM
 ()

	)

862 #i‚de‡
UINT_MAX


863 
	#UINT_MAX
 
	`TYPE_MAXIMUM
 ()

	)

866 #i‚de‡
LONG_MAX


867 
	#LONG_MAX
 
	`TYPE_MAXIMUM
 ()

	)

870 #i‚de‡
ULONG_MAX


871 
	#ULONG_MAX
 
	`TYPE_MAXIMUM
 ()

	)

874 #i‚de‡
SIZE_MAX


875 
	#SIZE_MAX
 
	`TYPE_MAXIMUM
 (
size_t
)

	)

878 #i‚de‡
SSIZE_MAX


879 
	#SSIZE_MAX
 
	`TYPE_MAXIMUM
 (
ssize_t
)

	)

882 #i‚de‡
UINTMAX_MAX


883 
	#UINTMAX_MAX
 
	`TYPE_MAXIMUM
 (
uötmax_t
)

	)

886 #i‚de‡
OFF_T_MIN


887 
	#OFF_T_MIN
 
	`TYPE_MINIMUM
 (
off_t
)

	)

890 #i‚de‡
OFF_T_MAX


891 
	#OFF_T_MAX
 
	`TYPE_MAXIMUM
 (
off_t
)

	)

894 #i‚de‡
UID_T_MAX


895 
	#UID_T_MAX
 
	`TYPE_MAXIMUM
 (
uid_t
)

	)

898 #i‚de‡
GID_T_MAX


899 
	#GID_T_MAX
 
	`TYPE_MAXIMUM
 (
gid_t
)

	)

902 #i‚de‡
PID_T_MAX


903 
	#PID_T_MAX
 
	`TYPE_MAXIMUM
 (
pid_t
)

	)

907 #ifde‡
löt


908 
	#IF_LINT
(
Code
Ë
	)
Code

910 
	#IF_LINT
(
Code
Ë

	)

913 #i‚de‡
__©åibuã__


914 #i‡
__GNUC__
 < 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 < 8Ë|| 
__STRICT_ANSI__


915 
	#__©åibuã__
(
x
)

	)

919 #i‚de‡
ATTRIBUTE_NORETURN


920 
	#ATTRIBUTE_NORETURN
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

923 #i‚de‡
ATTRIBUTE_UNUSED


924 
	#ATTRIBUTE_UNUSED
 
	`__©åibuã__
 ((
__unu£d__
))

	)

927 #i‡
deföed
 
°rdu∑


928 
	#ASSIGN_STRDUPA
(
DEST
, 
S
) \

929 dÿ{ 
DEST
 = 
	`°rdu∑
 (
S
); } 0)

	)

931 
	#ASSIGN_STRDUPA
(
DEST
, 
S
) \

934 c⁄° *
s_
 = (
S
); \

935 
size_t
 
Àn_
 = 
	`°æí
 (
s_
) + 1; \

936 *
tmp_de°_
 = 
	`Æloˇ
 (
Àn_
); \

937 
DEST
 = 
	`mem˝y
 (
tmp_de°_
, (
s_
), 
Àn_
); \

939 0)

	)

942 #i‚de‡
EOVERFLOW


943 
	#EOVERFLOW
 
EINVAL


	)

946 #i‡! 
HAVE_FSEEKO
 && ! 
deföed
 
f£eko


947 
	#f£eko
(
s
, 
o
, 
w
) ((o) == () (o) \

948 ? 
	`f£ek
 (
s
, 
o
, 
w
) \

949 : (
î∫o
 = 
EOVERFLOW
, -1))

	)

	@uname/uname.c

22 
	~<c⁄fig.h
>

23 
	~<°dio.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<sys/ut¢ame.h
>

26 
	~<gë›t.h
>

28 #i‡
HAVE_SYSINFO
 && 
HAVE_SYS_SYSTEMINFO_H


29 
	~<sys/sy°emöfo.h
>

32 #i‡
HAVE_SYSCTL
 && 
HAVE_SYS_SYSCTL_H


33 
	~<sys/∑øm.h
>

34 
	~<sys/sys˘l.h
>

35 #ifde‡
HW_MODEL


36 #ifde‡
HW_MACHINE_ARCH


38 
	#UNAME_HARDWARE_PLATFORM
 
HW_MODEL


	)

39 
	#UNAME_PROCESSOR
 
HW_MACHINE_ARCH


	)

42 
	#UNAME_PROCESSOR
 
HW_MODEL


	)

47 
	~"sy°em.h
"

48 
	~"îr‹.h
"

51 
	#PROGRAM_NAME
 "u«me"

	)

53 
	#AUTHORS
 "David MacKízõ"

	)

57 
	#PRINT_KERNEL_NAME
 1

	)

60 
	#PRINT_NODENAME
 2

	)

63 
	#PRINT_KERNEL_RELEASE
 4

	)

66 
	#PRINT_KERNEL_VERSION
 8

	)

69 
	#PRINT_MACHINE
 16

	)

72 
	#PRINT_PROCESSOR
 32

	)

75 
	#PRINT_HARDWARE_PLATFORM
 64

	)

78 
	#PRINT_OPERATING_SYSTEM
 128

	)

81 *
	g¥ogøm_«me
;

83 
›ti⁄
 c⁄° 
	gl⁄g_›ti⁄s
[] =

85 {"Æl", 
no_¨gumít
, 
NULL
, 'a'},

86 {"kî√l-«me", 
no_¨gumít
, 
NULL
, 's'},

87 {"sy¢ame", 
no_¨gumít
, 
NULL
, 's'},

88 {"nodíame", 
no_¨gumít
, 
NULL
, 'n'},

89 {"kî√l-ªÀa£", 
no_¨gumít
, 
NULL
, 'r'},

90 {"ªÀa£", 
no_¨gumít
, 
NULL
, 'r'},

91 {"kî√l-vîsi⁄", 
no_¨gumít
, 
NULL
, 'v'},

92 {"machöe", 
no_¨gumít
, 
NULL
, 'm'},

93 {"¥o˚ss‹", 
no_¨gumít
, 
NULL
, 'p'},

94 {"h¨dw¨e-∂©f‹m", 
no_¨gumít
, 
NULL
, 'i'},

95 {"›î©ög-sy°em", 
no_¨gumít
, 
NULL
, 'o'},

96 {
GETOPT_HELP_OPTION_DECL
},

97 {
GETOPT_VERSION_OPTION_DECL
},

98 {
NULL
, 0, NULL, 0}

102 
	$ußge
 (
°©us
)

104 i‡(
°©us
 !
EXIT_SUCCESS
)

105 
	`Ârötf
 (
°dîr
, 
	`_
("Try `%s --help' for more information.\n"),

106 
¥ogøm_«me
);

109 
	`¥ötf
 (
	`_
("Ußge: %†[OPTION]...\n"), 
¥ogøm_«me
);

110 
	`Âuts
 (
	`_
("\
 cîèö sy°em inf‹m©i⁄. WôhÇÿOPTION, samêa†-s.\n\
\n\
-a, --Æ»ÖröàÆ»öf‹m©i⁄, i¿thêfﬁlowög ordî:\n\
-s, --kî√l-«mêÖröàthêkî√»«me\n\
-n, --nodíamêÖröàthê√tw‹kÇodêho°«me\n\
-r, --kî√l-ªÀa£Öröàthêkî√»ªÀa£\n\
"), 
°dout
);

118 
	`Âuts
 (
	`_
("\
-v, --kî√l-vîsi⁄Öröàthêkî√»vîsi⁄\n\
-m, --machöêÖröàthêmachöêh¨dw¨ê«me\n\
-p, --¥o˚ss‹Öröàthê¥o˚ss‹Åy≥\n\
-i, --h¨dw¨e-∂©f‹mÖröàthêh¨dw¨ê∂©f‹m\n\
-o, --›î©ög-sy°emÖröàthê›î©ög sy°em\n\
"), 
°dout
);

125 
	`Âuts
 (
HELP_OPTION_DESCRIPTION
, 
°dout
);

126 
	`Âuts
 (
VERSION_OPTION_DESCRIPTION
, 
°dout
);

127 
	`¥ötf
 (
	`_
("\nRï‹àbug†tÿ<%s>.\n"), 
PACKAGE_BUGREPORT
);

129 
	`exô
 (
°©us
);

130 
	}
}

136 
	$¥öt_ñemít
 (c⁄° *
ñemít
)

138 
¥öãd
;

139 i‡(
¥öãd
++)

140 
	`putch¨
 (' ');

141 
	`Âuts
 (
ñemít
, 
°dout
);

142 
	}
}

145 
	$maö
 (
¨gc
, **
¨gv
)

147 
c
;

148 c⁄° 
unknown
[] = "unknown";

151 
t›röt
 = 0;

153 
	`öôülize_maö
 (&
¨gc
, &
¨gv
);

154 
¥ogøm_«me
 = 
¨gv
[0];

155 
	`£éoˇÀ
 (
LC_ALL
, "");

156 
	`bödãxtdomaö
 (
PACKAGE
, 
LOCALEDIR
);

157 
	`ãxtdomaö
 (
PACKAGE
);

159 
	`©exô
 (
˛o£_°dout
);

161 (
c
 = 
	`gë›t_l⁄g
 (
¨gc
, 
¨gv
, "a¢rvmpio", 
l⁄g_›ti⁄s
, 
NULL
)) != -1)

163 
c
)

169 
t›röt
 = -1;

173 
t›röt
 |
PRINT_KERNEL_NAME
;

177 
t›röt
 |
PRINT_NODENAME
;

181 
t›röt
 |
PRINT_KERNEL_RELEASE
;

185 
t›röt
 |
PRINT_KERNEL_VERSION
;

189 
t›röt
 |
PRINT_MACHINE
;

193 
t›röt
 |
PRINT_PROCESSOR
;

197 
t›röt
 |
PRINT_HARDWARE_PLATFORM
;

201 
t›röt
 |
PRINT_OPERATING_SYSTEM
;

204 
ˇ£_GETOPT_HELP_CHAR
;

206 
	`ˇ£_GETOPT_VERSION_CHAR
 (
PROGRAM_NAME
, 
AUTHORS
);

209 
	`ußge
 (
EXIT_FAILURE
);

213 i‡(
¨gc
 < 
›töd
)

215 
	`îr‹
 (0, 0, 
	`_
("too manyárguments"));

216 
	`ußge
 (
EXIT_FAILURE
);

219 i‡(
t›röt
 == 0)

220 
t›röt
 = 
PRINT_KERNEL_NAME
;

222 i‡(
t›röt


223 & (
PRINT_KERNEL_NAME
 | 
PRINT_NODENAME
 | 
PRINT_KERNEL_RELEASE


224 | 
PRINT_KERNEL_VERSION
 | 
PRINT_MACHINE
))

226 
ut¢ame
 
«me
;

228 i‡(
	`u«me
 (&
«me
) == -1)

229 
	`îr‹
 (
EXIT_FAILURE
, 
î∫o
, 
	`_
("cannot get systemÇame"));

231 i‡(
t›röt
 & 
PRINT_KERNEL_NAME
)

232 
	`¥öt_ñemít
 (
«me
.
sy¢ame
);

233 i‡(
t›röt
 & 
PRINT_NODENAME
)

234 
	`¥öt_ñemít
 (
«me
.
nodíame
);

235 i‡(
t›röt
 & 
PRINT_KERNEL_RELEASE
)

236 
	`¥öt_ñemít
 (
«me
.
ªÀa£
);

237 i‡(
t›röt
 & 
PRINT_KERNEL_VERSION
)

238 
	`¥öt_ñemít
 (
«me
.
vîsi⁄
);

239 i‡(
t›röt
 & 
PRINT_MACHINE
)

240 
	`¥öt_ñemít
 (
«me
.
machöe
);

243 i‡(
t›röt
 & 
PRINT_PROCESSOR
)

245 c⁄° *
ñemít
 = 
unknown
;

246 #i‡
HAVE_SYSINFO
 && 
deföed
 
SI_ARCHITECTURE


248 
¥o˚ss‹
[257];

249 i‡(0 <
	`sysöfo
 (
SI_ARCHITECTURE
, 
¥o˚ss‹
, Örocessor))

250 
ñemít
 = 
¥o˚ss‹
;

253 #ifde‡
UNAME_PROCESSOR


254 i‡(
ñemít
 =
unknown
)

256 
¥o˚ss‹
[257];

257 
size_t
 
s
 =  
¥o˚ss‹
;

258 
mib
[] = { 
CTL_HW
, 
UNAME_PROCESSOR
 };

259 i‡(
	`sys˘l
 (
mib
, 2, 
¥o˚ss‹
, &
s
, 0, 0) >= 0)

260 
ñemít
 = 
¥o˚ss‹
;

263 
	`¥öt_ñemít
 (
ñemít
);

266 i‡(
t›röt
 & 
PRINT_HARDWARE_PLATFORM
)

268 c⁄° *
ñemít
 = 
unknown
;

269 #i‡
HAVE_SYSINFO
 && 
deföed
 
SI_PLATFORM


271 
h¨dw¨e_∂©f‹m
[257];

272 i‡(0 <
	`sysöfo
 (
SI_PLATFORM
,

273 
h¨dw¨e_∂©f‹m
,  hardware_platform))

274 
ñemít
 = 
h¨dw¨e_∂©f‹m
;

277 #ifde‡
UNAME_HARDWARE_PLATFORM


278 i‡(
ñemít
 =
unknown
)

280 
h¨dw¨e_∂©f‹m
[257];

281 
size_t
 
s
 =  
h¨dw¨e_∂©f‹m
;

282 
mib
[] = { 
CTL_HW
, 
UNAME_HARDWARE_PLATFORM
 };

283 i‡(
	`sys˘l
 (
mib
, 2, 
h¨dw¨e_∂©f‹m
, &
s
, 0, 0) >= 0)

284 
ñemít
 = 
h¨dw¨e_∂©f‹m
;

287 
	`¥öt_ñemít
 (
ñemít
);

290 i‡(
t›röt
 & 
PRINT_OPERATING_SYSTEM
)

291 
	`¥öt_ñemít
 (
HOST_OPERATING_SYSTEM
);

293 
	`putch¨
 ('\n');

295 
	`exô
 (
EXIT_SUCCESS
);

296 
	}
}

	@who/iwho.c

17 
	~<°dio.h
>

18 
	~<utmp.h
>

19 
	~<f˙é.h
>

20 
	~<uni°d.h
>

24 
Show_Info
(
utmp
 *
buf_Â
);

26 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

28 
utmp
 
ªc‹d
;

29 
FILE
 *
utmp_fd
;

30 
ªad_Àn
 = (
ªc‹d
);

33 
utmp_fd
 = 
	`f›í
(
UTMP_FILE
, "r");

35 
	`‰ód
(&
ªc‹d
, 
ªad_Àn
, 1, 
utmp_fd
))

37 
	`Show_Info
(&
ªc‹d
);

40 
	`f˛o£
(
utmp_fd
);

42 
	}
}

44 
	$Show_Info
(
utmp
 *
buf_Â
)

46 
	`¥ötf
("%-8.8s", 
buf_Â
->
ut_id
);

47 
	`¥ötf
(" ");

48 
	`¥ötf
("%-8.8s", 
buf_Â
->
ut_«me
);

49 
	`¥ötf
(" ");

50 
	`¥ötf
("%-8.8s", 
buf_Â
->
ut_löe
);

51 
	`¥ötf
(" ");

52 
	`¥ötf
("% 10ld", 
buf_Â
->
ut_time
);

53 
	`¥ötf
(" ");

54 #ifde‡
SHOWHOST


55 
	`¥ötf
("(%s)", 
buf_Â
->
ut_ho°
);

57 
	`¥ötf
("\n");

58 
	}
}

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

251 #i‚de‡
__USE_FILE_OFFSET64


252 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

253 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

254 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

255 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

256 
__c⁄°
 
dúít
 **))

257 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__REDIRECT


260 
	`__REDIRECT
 (
sˇndú
,

261 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

262 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

263 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

264 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

265 
__c⁄°
 
dúít
 **)),

266 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

268 
	#sˇndú
 
sˇndú64


	)

272 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


275 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

276 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

277 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

278 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

279 
__c⁄°
 
dúít64
 **))

280 
	`__n⁄nuŒ
 ((1, 2));

284 #i‚de‡
__USE_FILE_OFFSET64


285 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

286 
__c⁄°
 
dúít
 **
__e2
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT_NTH
 (
Æphas‹t
,

291 (
__c⁄°
 
dúít
 **
__e1
,

292 
__c⁄°
 
dúít
 **
__e2
),

293 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 
	#Æphas‹t
 
Æphas‹t64


	)

299 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


300 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

301 
__c⁄°
 
dúít64
 **
__e2
)

302 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


312 #i‚de‡
__USE_FILE_OFFSET64


313 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

314 
size_t
 
__nbyãs
,

315 
__off_t
 *
__ª°ri˘
 
__ba£p
)

316 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

318 #ifde‡
__REDIRECT


319 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

320 (
__fd
, *
__ª°ri˘
 
__buf
,

321 
size_t
 
__nbyãs
,

322 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

323 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

325 
	#gëdúíåõs
 
gëdúíåõs64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

331 
size_t
 
__nbyãs
,

332 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

333 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

337 #ifde‡
__USE_GNU


339 #i‚de‡
__USE_FILE_OFFSET64


340 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

341 
__c⁄°
 
dúít
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 #ifde‡
__REDIRECT


345 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

346 (
__c⁄°
 
dúít
 **
__e1
,

347 
__c⁄°
 
dúít
 **
__e2
),

348 
vîsi⁄s‹t64
)

349 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

351 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

355 #ifde‡
__USE_LARGEFILE64


356 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

357 
__c⁄°
 
dúít64
 **
__e2
)

358 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

362 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/error.h

20 #i‚de‡
_ERROR_H


21 
	#_ERROR_H
 1

	)

23 
	~<„©uªs.h
>

26 
__BEGIN_DECLS


32 
	$îr‹
 (
__°©us
, 
__î∫um
, 
__c⁄°
 *
__f‹m©
, ...)

33 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

35 
	$îr‹_©_löe
 (
__°©us
, 
__î∫um
, 
__c⁄°
 *
__‚ame
,

36 
__löío
, 
__c⁄°
 *
__f‹m©
, ...)

37 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 5, 6)));

42 (*
îr‹_¥öt_¥og«me
) ();

45 
îr‹_mesßge_cou¡
;

49 
îr‹_⁄e_≥r_löe
;

52 #i‡
deföed
 
__exã∫_Æways_ölöe
 && deföed 
__va_¨g_∑ck


53 
	~<bôs/îr‹.h
>

56 
__END_DECLS


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

64 
f˙é
 (
__fd
, 
__cmd
, ...);

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__REDIRECT


76 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

77 
	`__n⁄nuŒ
 ((1));

79 
	#›í
 
›í64


	)

82 #ifde‡
__USE_LARGEFILE64


83 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

86 #ifde‡
__USE_ATFILE


96 #i‚de‡
__USE_FILE_OFFSET64


97 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

98 
	`__n⁄nuŒ
 ((2));

100 #ifde‡
__REDIRECT


101 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

102 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

104 
	#›í©
 
›í©64


	)

108 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

109 
	`__n⁄nuŒ
 ((2));

117 #i‚de‡
__USE_FILE_OFFSET64


118 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

120 #ifde‡
__REDIRECT


121 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

122 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

124 
	#¸ót
 
¸ót64


	)

127 #ifde‡
__USE_LARGEFILE64


128 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

131 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

132 && !
deföed
 
__USE_POSIX
))

141 
	#F_ULOCK
 0

	)

142 
	#F_LOCK
 1

	)

143 
	#F_TLOCK
 2

	)

144 
	#F_TEST
 3

	)

146 #i‚de‡
__USE_FILE_OFFSET64


147 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

149 #ifde‡
__REDIRECT


150 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

152 
	#lockf
 
lockf64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

160 #ifde‡
__USE_XOPEN2K


163 #i‚de‡
__USE_FILE_OFFSET64


164 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

165 
__advi£
Ë
__THROW
;

167 #ifde‡
__REDIRECT_NTH


168 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

169 
__off64_t
 
__Àn
, 
__advi£
),

170 
posix_Ádvi£64
);

172 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

175 #ifde‡
__USE_LARGEFILE64


176 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

177 
__advi£
Ë
__THROW
;

185 #i‚de‡
__USE_FILE_OFFSET64


186 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

190 
__off64_t
 
__Àn
),

191 
posix_ÁŒoˇã64
);

193 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

196 #ifde‡
__USE_LARGEFILE64


197 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

203 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

204 && 
deföed
 
__va_¨g_∑ck_Àn


205 
	~<bôs/f˙é2.h
>

208 
__END_DECLS


	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/grp.h

23 #i‚def 
_GRP_H


24 
	#_GRP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

43 
	sgroup


45 *
	mgr_«me
;

46 *
	mgr_∑sswd
;

47 
__gid_t
 
	mgr_gid
;

48 **
	mgr_mem
;

52 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


53 
	#__√ed_FILE


	)

54 
	~<°dio.h
>

58 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


63 
£tgª¡
 ();

69 
ídgª¡
 ();

75 
group
 *
gëgª¡
 ();

78 #ifdef 
__USE_SVID


85 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

88 #ifde‡
__USE_GNU


95 
putgª¡
 (
__c⁄°
 
group
 *
__ª°ri˘
 
__p
,

96 
FILE
 *
__ª°ri˘
 
__f
);

103 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

109 
group
 *
gëg∫am
 (
__c⁄°
 *
__«me
);

111 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


113 #ifde‡
__USE_MISC


116 
	#NSS_BUFLEN_GROUP
 1024

	)

132 #ifde‡
__USE_GNU


133 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

134 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

135 
group
 **
__ª°ri˘
 
__ªsu…
);

142 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

143 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

144 
group
 **
__ª°ri˘
 
__ªsu…
);

150 
gëg∫am_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
group
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
group
 **
__ª°ri˘
 
__ªsu…
);

155 #ifdef 
__USE_SVID


163 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

164 
group
 *
__ª°ri˘
 
__ªsu…buf
,

165 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

166 
group
 **
__ª°ri˘
 
__ªsu…
);

172 #ifdef 
__USE_BSD


174 
	#__√ed_size_t


	)

175 
	~<°ddef.h
>

178 
	$£tgroups
 (
size_t
 
__n
, 
__c⁄°
 
__gid_t
 *
__groups
Ë
__THROW
;

188 
	`gëgrou∂i°
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
,

189 
__gid_t
 *
__groups
, *
__ngroups
);

199 
	`öôgroups
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
);

203 
__END_DECLS


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_XOPEN2K8


146 
	~<xloˇÀ.h
>

152 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

153 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

159 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

160 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

161 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

162 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

163 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

164 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

165 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

166 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

167 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

168 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

169 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

170 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

171 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

172 | 
LC_NUMERIC_MASK
 \

173 | 
LC_TIME_MASK
 \

174 | 
LC_COLLATE_MASK
 \

175 | 
LC_MONETARY_MASK
 \

176 | 
LC_MESSAGES_MASK
 \

177 | 
LC_PAPER_MASK
 \

178 | 
LC_NAME_MASK
 \

179 | 
LC_ADDRESS_MASK
 \

180 | 
LC_TELEPHONE_MASK
 \

181 | 
LC_MEASUREMENT_MASK
 \

182 | 
LC_IDENTIFICATION_MASK
 \

183 )

	)

187 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

198 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

202 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

206 
__END_DECLS


	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/sys/dir.h

19 #i‚def 
_SYS_DIR_H


20 
	#_SYS_DIR_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<dúít.h
>

26 
	#dúe˘
 
dúít


	)

	@/usr/include/sys/file.h

19 #i‚def 
_SYS_FILE_H


20 
	#_SYS_FILE_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‚def 
_FCNTL_H


25 
	~<f˙é.h
>

28 
	g__BEGIN_DECLS


33 #i‚de‡
L_SET


34 
	#L_SET
 0

	)

35 
	#L_INCR
 1

	)

36 
	#L_XTND
 2

	)

41 
	#LOCK_SH
 1

	)

42 
	#LOCK_EX
 2

	)

43 
	#LOCK_UN
 8

	)

46 
	#LOCK_NB
 4

	)

51 
	$Êock
 (
__fd
, 
__›î©i⁄
Ë
__THROW
;

54 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 #i‚de‡
ARG_MAX


23 
	#__undef_ARG_MAX


	)

26 
	~<limôs.h
>

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #i‚de‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


38 
	#NBBY
 
CHAR_BIT


	)

39 #i‚def 
NGROUPS


40 
	#NGROUPS
 
NGROUPS_MAX


	)

42 
	#MAXSYMLINKS
 20

	)

43 
	#CANBSIZ
 
MAX_CANON


	)

44 
	#MAXPATHLEN
 
PATH_MAX


	)

48 
	#NOFILE
 256

	)

49 
	#NCARGS
 131072

	)

52 
	~<sys/ty≥s.h
>

55 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

56 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

57 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

58 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

61 #i‚de‡
howm™y


62 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

64 #ifde‡
__GNUC__


65 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

66 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

67 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

69 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

71 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

74 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

75 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

79 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

365 
__c⁄°
 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 
__c⁄°
 *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/sysctl.h

19 #i‚def 
_SYS_SYSCTL_H


20 
	#_SYS_SYSCTL_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 #i‚de‡
_LINUX_KERNEL_H


27 
	#_LINUX_KERNEL_H
 1

	)

28 
	#__undef_LINUX_KERNEL_H


	)

30 #i‚de‡
_LINUX_TYPES_H


31 
	#_LINUX_TYPES_H
 1

	)

32 
	#__undef_LINUX_TYPES_H


	)

34 #i‚de‡
_LINUX_LIST_H


35 
	#_LINUX_LIST_H
 1

	)

36 
	#__undef_LINUX_LIST_H


	)

38 #i‚de‡
__LINUX_COMPILER_H


39 
	#__LINUX_COMPILER_H
 1

	)

40 
	#__u£r


	)

41 
	#__undef__LINUX_COMPILER_H


	)

44 
	~<löux/sys˘l.h
>

46 #ifde‡
__undef_LINUX_KERNEL_H


47 #unde‡
_LINUX_KERNEL_H


48 #unde‡
__undef_LINUX_KERNEL_H


50 #ifde‡
__undef_LINUX_TYPES_H


51 #unde‡
_LINUX_TYPES_H


52 #unde‡
__undef_LINUX_TYPES_H


54 #ifde‡
__undef_LINUX_LIST_H


55 #unde‡
_LINUX_LIST_H


56 #unde‡
__undef_LINUX_LIST_H


58 #ifde‡
__undef__LINUX_COMPILER_H


59 #unde‡
__LINUX_COMPILER_H


60 #unde‡
__u£r


61 #unde‡
__undef__LINUX_COMPILER_H


64 
__BEGIN_DECLS


67 
	$sys˘l
 (*
__«me
, 
__∆í
, *
__ﬁdvÆ
,

68 
size_t
 *
__ﬁdÀ≈
, *
__√wvÆ
, size_à
__√wÀn
Ë
__THROW
;

70 
__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/utsname.h

23 #i‚def 
_SYS_UTSNAME_H


24 
	#_SYS_UTSNAME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ut¢ame.h
>

32 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


33 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

35 #i‚de‡
_UTSNAME_NODENAME_LENGTH


36 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

38 #i‚de‡
_UTSNAME_RELEASE_LENGTH


39 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

41 #i‚de‡
_UTSNAME_VERSION_LENGTH


42 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

44 #i‚de‡
_UTSNAME_MACHINE_LENGTH


45 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

49 
	sut¢ame


52 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

55 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

58 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

60 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

63 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

65 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

67 #ifde‡
__USE_GNU


68 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

70 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

75 #ifde‡
__USE_SVID


77 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

82 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

85 
__END_DECLS


	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #ifde‡
__USE_UNIX98


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #ifde‡
__USE_UNIX98


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #ifde‡
__USE_UNIX98


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


448 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

449 
__THROW
;

456 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

465 
	`∑u£
 ();

469 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

470 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

472 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


474 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

479 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

480 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

484 #ifde‡
__USE_ATFILE


487 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

488 
__gid_t
 
__group
, 
__Êag
)

489 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

493 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

495 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


497 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

507 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

509 #ifdef 
__USE_GNU


513 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

516 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


520 *
	$gëwd
 (*
__buf
)

521 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

526 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

529 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

531 #ifde‡
__USE_GNU


534 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

538 **
__ívú⁄
;

539 #ifde‡
__USE_GNU


540 **
ívú⁄
;

546 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

547 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

549 #ifde‡
__USE_XOPEN2K8


552 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

553 
__THROW
;

558 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((1));

563 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

564 
__THROW
 
	`__n⁄nuŒ
 ((1));

568 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1));

573 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

574 
__THROW
 
	`__n⁄nuŒ
 ((1));

579 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

580 
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #ifde‡
__USE_GNU


585 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

586 *
__c⁄°
 
__ívp
[])

587 
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


593 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

598 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

604 
	~<bôs/c⁄‚ame.h
>

607 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

611 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

614 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

616 #ifdef 
__USE_POSIX2


618 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

623 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

626 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

630 #i‚de‡
__FAVOR_BSD


631 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

633 #ifde‡
__REDIRECT_NTH


634 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

636 
	#gëpgΩ
 
__gëpgid


	)

641 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 #ifde‡
__USE_XOPEN_EXTENDED


643 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

650 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

652 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


663 #i‚de‡
__FAVOR_BSD


667 
	$£çgΩ
 (Ë
__THROW
;

672 #ifde‡
__REDIRECT_NTH


673 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

675 
	#£çgΩ
 
£çgid


	)

684 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

686 #ifde‡
__USE_XOPEN_EXTENDED


688 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

692 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

695 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

698 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

701 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

706 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

708 #ifdef 
__USE_GNU


710 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

717 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

734 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

736 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


739 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


744 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

747 #ifde‡
__USE_GNU


750 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

751 
__THROW
;

755 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

756 
__THROW
;

760 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

761 
__THROW
;

765 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

766 
__THROW
;

773 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

775 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


780 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

786 *
	$ây«me
 (
__fd
Ë
__THROW
;

790 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

791 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

795 
	$ißây
 (
__fd
Ë
__THROW
;

797 #i‡
deföed
 
__USE_BSD
 \

798 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

801 
	$ây¶Ÿ
 (Ë
__THROW
;

806 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 #ifde‡
__USE_ATFILE


812 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

813 
__c⁄°
 *
__to
, 
__Êags
)

814 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

817 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


819 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

825 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

826 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

830 #ifde‡
__USE_ATFILE


832 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

833 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

836 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

837 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

838 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

842 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_ATFILE


846 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

847 
__THROW
 
	`__n⁄nuŒ
 ((2));

851 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

858 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

865 *
	`gëlogö
 ();

866 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


873 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

876 #ifdef 
__USE_BSD


878 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_POSIX2


886 
	#__√ed_gë›t


	)

887 
	~<gë›t.h
>

891 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


895 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

902 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

907 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

913 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$vh™gup
 (Ë
__THROW
;

925 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

933 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

934 
size_t
 
__off£t
, 
__sˇÀ
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

945 *
	$gëu£rshñl
 (Ë
__THROW
;

946 
	$ídu£rshñl
 (Ë
__THROW
;

947 
	$£tu£rshñl
 (Ë
__THROW
;

953 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

957 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

960 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

964 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

968 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


973 
	`fsync
 (
__fd
);

977 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


980 
	`gëho°id
 ();

983 
	$sync
 (Ë
__THROW
;

988 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

993 
	$gëdèbÀsize
 (Ë
__THROW
;

997 #i‚de‡
__USE_FILE_OFFSET64


998 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

999 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 #ifde‡
__REDIRECT_NTH


1002 
	`__REDIRECT_NTH
 (
åunˇã
,

1003 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1004 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1006 
	#åunˇã
 
åunˇã64


	)

1009 #ifde‡
__USE_LARGEFILE64


1010 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1016 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1019 #i‚de‡
__USE_FILE_OFFSET64


1020 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1022 #ifde‡
__REDIRECT_NTH


1023 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1024 
·runˇã64
Ë
__wur
;

1026 
	#·runˇã
 
·runˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1036 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1142 #ifde‡
__USE_XOPEN


1144 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1150 
	~<bôs/uni°d.h
>

1153 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@/usr/include/utmp.h

19 #i‚def 
_UTMP_H


20 
	#_UTMP_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

27 
	g__BEGIN_DECLS


30 
	~<bôs/utmp.h
>

33 
	#UTMP_FILE
 
_PATH_UTMP


	)

34 
	#UTMP_FILENAME
 
_PATH_UTMP


	)

35 
	#WTMP_FILE
 
_PATH_WTMP


	)

36 
	#WTMP_FILENAME
 
_PATH_WTMP


	)

42 
	$logö_ây
 (
__fd
Ë
__THROW
;

46 
	$logö
 (
__c⁄°
 
utmp
 *
__íåy
Ë
__THROW
;

49 
	$logout
 (
__c⁄°
 *
__ut_löe
Ë
__THROW
;

52 
	$logwtmp
 (
__c⁄°
 *
__ut_löe
, __c⁄° *
__ut_«me
,

53 
__c⁄°
 *
__ut_ho°
Ë
__THROW
;

56 
	$updwtmp
 (
__c⁄°
 *
__wtmp_fûe
, __c⁄° 
utmp
 *
__utmp
)

57 
__THROW
;

60 
	$utm≤ame
 (
__c⁄°
 *
__fûe
Ë
__THROW
;

63 
utmp
 *
	$gëuã¡
 (Ë
__THROW
;

66 
	$£tuã¡
 (Ë
__THROW
;

69 
	$íduã¡
 (Ë
__THROW
;

73 
utmp
 *
	$gëutid
 (
__c⁄°
 
utmp
 *
__id
Ë
__THROW
;

77 
utmp
 *
	$gëuéöe
 (
__c⁄°
 
utmp
 *
__löe
Ë
__THROW
;

80 
utmp
 *
	$putuéöe
 (
__c⁄°
 
utmp
 *
__utmp_±r
Ë
__THROW
;

83 #ifdef 
__USE_MISC


85 
	$gëuã¡_r
 (
utmp
 *
__buf„r
, utm∞**
__ªsu…
Ë
__THROW
;

87 
	$gëutid_r
 (
__c⁄°
 
utmp
 *
__id
, utm∞*
__buf„r
,

88 
utmp
 **
__ªsu…
Ë
__THROW
;

90 
	$gëuéöe_r
 (
__c⁄°
 
utmp
 *
__löe
,

91 
utmp
 *
__buf„r
, utm∞**
__ªsu…
Ë
__THROW
;

95 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/error.h

20 #i‚def 
_ERROR_H


25 
__REDIRECT
 (
__îr‹_Æüs
, (
__°©us
, 
__î∫um
,

26 
__c⁄°
 *
__f‹m©
, ...),

27 
îr‹
)

28 
__©åibuã__
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4)));

29 
__REDIRECT
 (
__îr‹_n‹ëu∫
, (
__°©us
, 
__î∫um
,

30 
__c⁄°
 *
__f‹m©
, ...),

31 
îr‹
)

32 
__©åibuã__
 ((
__n‹ëu∫__
, 
__f‹m©__
 (
__¥ötf__
, 3, 4)));

37 
__exã∫_Æways_ölöe
 

38 
	$îr‹
 (
__°©us
, 
__î∫um
, 
__c⁄°
 *
__f‹m©
, ...)

40 i‡(
	`__buûtö_c⁄°™t_p
 (
__°©us
) && __status != 0)

41 
	`__îr‹_n‹ëu∫
 (
__°©us
, 
__î∫um
, 
__f‹m©
, 
	`__va_¨g_∑ck
 ());

43 
	`__îr‹_Æüs
 (
__°©us
, 
__î∫um
, 
__f‹m©
, 
	`__va_¨g_∑ck
 ());

44 
	}
}

47 
__REDIRECT
 (
__îr‹_©_löe_Æüs
, (
__°©us
, 
__î∫um
,

48 
__c⁄°
 *
__‚ame
,

49 
__löe
,

50 
__c⁄°
 *
__f‹m©
, ...),

51 
îr‹_©_löe
)

52 
__©åibuã__
 ((
__f‹m©__
 (
__¥ötf__
, 5, 6)));

53 
__REDIRECT
 (
__îr‹_©_löe_n‹ëu∫
, (
__°©us
, 
__î∫um
,

54 
__c⁄°
 *
__‚ame
,

55 
__löe
,

56 
__c⁄°
 *
__f‹m©
,

58 
îr‹_©_löe
)

59 
__©åibuã__
 ((
__n‹ëu∫__
, 
__f‹m©__
 (
__¥ötf__
, 5, 6)));

64 
__exã∫_Æways_ölöe
 

65 
	$îr‹_©_löe
 (
__°©us
, 
__î∫um
, 
__c⁄°
 *
__‚ame
,

66 
__löe
,
__c⁄°
 *
__f‹m©
, ...)

68 i‡(
	`__buûtö_c⁄°™t_p
 (
__°©us
) && __status != 0)

69 
	`__îr‹_©_löe_n‹ëu∫
 (
__°©us
, 
__î∫um
, 
__‚ame
, 
__löe
, 
__f‹m©
,

70 
	`__va_¨g_∑ck
 ());

72 
	`__îr‹_©_löe_Æüs
 (
__°©us
, 
__î∫um
, 
__‚ame
, 
__löe
,

73 
__f‹m©
, 
	`__va_¨g_∑ck
 ());

74 
	}
}

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 #i‡
__WORDSIZE
 == 64

66 
	#O_LARGEFILE
 0

	)

68 
	#O_LARGEFILE
 0100000

	)

73 
	#F_DUPFD
 0

	)

74 
	#F_GETFD
 1

	)

75 
	#F_SETFD
 2

	)

76 
	#F_GETFL
 3

	)

77 
	#F_SETFL
 4

	)

78 #i‡
__WORDSIZE
 == 64

79 
	#F_GETLK
 5

	)

80 
	#F_SETLK
 6

	)

81 
	#F_SETLKW
 7

	)

83 
	#F_GETLK64
 5

	)

84 
	#F_SETLK64
 6

	)

85 
	#F_SETLKW64
 7

	)

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	#F_GETLK
 5

	)

89 
	#F_SETLK
 6

	)

90 
	#F_SETLKW
 7

	)

92 
	#F_GETLK
 
F_GETLK64


	)

93 
	#F_SETLK
 
F_SETLK64


	)

94 
	#F_SETLKW
 
F_SETLKW64


	)

96 
	#F_GETLK64
 12

	)

97 
	#F_SETLK64
 13

	)

98 
	#F_SETLKW64
 14

	)

101 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


102 
	#F_SETOWN
 8

	)

103 
	#F_GETOWN
 9

	)

106 #ifde‡
__USE_GNU


107 
	#F_SETSIG
 10

	)

108 
	#F_GETSIG
 11

	)

109 
	#F_SETOWN_EX
 15

	)

110 
	#F_GETOWN_EX
 16

	)

113 #ifde‡
__USE_GNU


114 
	#F_SETLEASE
 1024

	)

115 
	#F_GETLEASE
 1025

	)

116 
	#F_NOTIFY
 1026

	)

117 
	#F_DUPFD_CLOEXEC
 1030

	)

122 
	#FD_CLOEXEC
 1

	)

125 
	#F_RDLCK
 0

	)

126 
	#F_WRLCK
 1

	)

127 
	#F_UNLCK
 2

	)

130 
	#F_EXLCK
 4

	)

131 
	#F_SHLCK
 8

	)

133 #ifde‡
__USE_BSD


135 
	#LOCK_SH
 1

	)

136 
	#LOCK_EX
 2

	)

137 
	#LOCK_NB
 4

	)

139 
	#LOCK_UN
 8

	)

142 #ifde‡
__USE_GNU


143 
	#LOCK_MAND
 32

	)

144 
	#LOCK_READ
 64

	)

145 
	#LOCK_WRITE
 128

	)

146 
	#LOCK_RW
 192

	)

149 #ifde‡
__USE_GNU


151 
	#DN_ACCESS
 0x00000001

	)

152 
	#DN_MODIFY
 0x00000002

	)

153 
	#DN_CREATE
 0x00000004

	)

154 
	#DN_DELETE
 0x00000008

	)

155 
	#DN_RENAME
 0x00000010

	)

156 
	#DN_ATTRIB
 0x00000020

	)

157 
	#DN_MULTISHOT
 0x80000000

	)

160 
	sÊock


162 
	ml_ty≥
;

163 
	ml_whí˚
;

164 #i‚de‡
__USE_FILE_OFFSET64


165 
__off_t
 
	ml_°¨t
;

166 
__off_t
 
	ml_Àn
;

168 
__off64_t
 
	ml_°¨t
;

169 
__off64_t
 
	ml_Àn
;

171 
__pid_t
 
	ml_pid
;

174 #ifde‡
__USE_LARGEFILE64


175 
	sÊock64


177 
	ml_ty≥
;

178 
	ml_whí˚
;

179 
__off64_t
 
	ml_°¨t
;

180 
__off64_t
 
	ml_Àn
;

181 
__pid_t
 
	ml_pid
;

185 #ifde‡
__USE_GNU


187 
	e__pid_ty≥


189 
	mF_OWNER_TID
 = 0,

190 
	mF_OWNER_PID
,

191 
	mF_OWNER_GID


195 
	sf_ow√r_ex


197 
__pid_ty≥
 
	mty≥
;

198 
__pid_t
 
	mpid
;

204 #ifdef 
__USE_BSD


205 
	#FAPPEND
 
O_APPEND


	)

206 
	#FFSYNC
 
O_FSYNC


	)

207 
	#FASYNC
 
O_ASYNC


	)

208 
	#FNONBLOCK
 
O_NONBLOCK


	)

209 
	#FNDELAY
 
O_NDELAY


	)

213 #ifde‡
__USE_XOPEN2K


214 
	#POSIX_FADV_NORMAL
 0

	)

215 
	#POSIX_FADV_RANDOM
 1

	)

216 
	#POSIX_FADV_SEQUENTIAL
 2

	)

217 
	#POSIX_FADV_WILLNEED
 3

	)

218 
	#POSIX_FADV_DONTNEED
 4

	)

219 
	#POSIX_FADV_NOREUSE
 5

	)

223 #ifde‡
__USE_GNU


225 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

228 
	#SYNC_FILE_RANGE_WRITE
 2

	)

231 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

236 
	#SPLICE_F_MOVE
 1

	)

237 
	#SPLICE_F_NONBLOCK
 2

	)

240 
	#SPLICE_F_MORE
 4

	)

241 
	#SPLICE_F_GIFT
 8

	)

245 #ifde‡
__USE_ATFILE


246 
	#AT_FDCWD
 -100

	)

249 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

250 
	#AT_REMOVEDIR
 0x200

	)

252 
	#AT_SYMLINK_FOLLOW
 0x400

	)

253 
	#AT_EACCESS
 0x200

	)

257 
	g__BEGIN_DECLS


259 #ifde‡
__USE_GNU


262 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

263 
__THROW
;

267 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

268 
__Êags
);

272 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

273 
size_t
 
__cou¡
, 
__Êags
);

276 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

277 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

278 
__Êags
);

281 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

282 
__Êags
);

285 #i‚de‡
__USE_FILE_OFFSET64


286 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

288 #ifde‡
__REDIRECT


289 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

290 
__off64_t
 
__Àn
),

291 
ÁŒoˇã64
);

293 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

296 #ifde‡
__USE_LARGEFILE64


297 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

298 
__off64_t
 
__Àn
);

302 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m__∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m__∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/termios.h

21 #i‚de‡
_TERMIOS_H


25 
	tcc_t
;

26 
	t•ìd_t
;

27 
	ttcÊag_t
;

29 
	#NCCS
 32

	)

30 
	sãrmios


32 
tcÊag_t
 
	mc_iÊag
;

33 
tcÊag_t
 
	mc_oÊag
;

34 
tcÊag_t
 
	mc_cÊag
;

35 
tcÊag_t
 
	mc_lÊag
;

36 
cc_t
 
	mc_löe
;

37 
cc_t
 
	mc_cc
[
NCCS
];

38 
•ìd_t
 
	mc_i•ìd
;

39 
•ìd_t
 
	mc_o•ìd
;

40 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

41 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

45 
	#VINTR
 0

	)

46 
	#VQUIT
 1

	)

47 
	#VERASE
 2

	)

48 
	#VKILL
 3

	)

49 
	#VEOF
 4

	)

50 
	#VTIME
 5

	)

51 
	#VMIN
 6

	)

52 
	#VSWTC
 7

	)

53 
	#VSTART
 8

	)

54 
	#VSTOP
 9

	)

55 
	#VSUSP
 10

	)

56 
	#VEOL
 11

	)

57 
	#VREPRINT
 12

	)

58 
	#VDISCARD
 13

	)

59 
	#VWERASE
 14

	)

60 
	#VLNEXT
 15

	)

61 
	#VEOL2
 16

	)

64 
	#IGNBRK
 0000001

	)

65 
	#BRKINT
 0000002

	)

66 
	#IGNPAR
 0000004

	)

67 
	#PARMRK
 0000010

	)

68 
	#INPCK
 0000020

	)

69 
	#ISTRIP
 0000040

	)

70 
	#INLCR
 0000100

	)

71 
	#IGNCR
 0000200

	)

72 
	#ICRNL
 0000400

	)

73 
	#IUCLC
 0001000

	)

74 
	#IXON
 0002000

	)

75 
	#IXANY
 0004000

	)

76 
	#IXOFF
 0010000

	)

77 
	#IMAXBEL
 0020000

	)

78 
	#IUTF8
 0040000

	)

81 
	#OPOST
 0000001

	)

82 
	#OLCUC
 0000002

	)

83 
	#ONLCR
 0000004

	)

84 
	#OCRNL
 0000010

	)

85 
	#ONOCR
 0000020

	)

86 
	#ONLRET
 0000040

	)

87 
	#OFILL
 0000100

	)

88 
	#OFDEL
 0000200

	)

89 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


90 
	#NLDLY
 0000400

	)

91 
	#NL0
 0000000

	)

92 
	#NL1
 0000400

	)

93 
	#CRDLY
 0003000

	)

94 
	#CR0
 0000000

	)

95 
	#CR1
 0001000

	)

96 
	#CR2
 0002000

	)

97 
	#CR3
 0003000

	)

98 
	#TABDLY
 0014000

	)

99 
	#TAB0
 0000000

	)

100 
	#TAB1
 0004000

	)

101 
	#TAB2
 0010000

	)

102 
	#TAB3
 0014000

	)

103 
	#BSDLY
 0020000

	)

104 
	#BS0
 0000000

	)

105 
	#BS1
 0020000

	)

106 
	#FFDLY
 0100000

	)

107 
	#FF0
 0000000

	)

108 
	#FF1
 0100000

	)

111 
	#VTDLY
 0040000

	)

112 
	#VT0
 0000000

	)

113 
	#VT1
 0040000

	)

115 #ifde‡
__USE_MISC


116 
	#XTABS
 0014000

	)

120 #ifde‡
__USE_MISC


121 
	#CBAUD
 0010017

	)

123 
	#B0
 0000000

	)

124 
	#B50
 0000001

	)

125 
	#B75
 0000002

	)

126 
	#B110
 0000003

	)

127 
	#B134
 0000004

	)

128 
	#B150
 0000005

	)

129 
	#B200
 0000006

	)

130 
	#B300
 0000007

	)

131 
	#B600
 0000010

	)

132 
	#B1200
 0000011

	)

133 
	#B1800
 0000012

	)

134 
	#B2400
 0000013

	)

135 
	#B4800
 0000014

	)

136 
	#B9600
 0000015

	)

137 
	#B19200
 0000016

	)

138 
	#B38400
 0000017

	)

139 #ifde‡
__USE_MISC


140 
	#EXTA
 
B19200


	)

141 
	#EXTB
 
B38400


	)

143 
	#CSIZE
 0000060

	)

144 
	#CS5
 0000000

	)

145 
	#CS6
 0000020

	)

146 
	#CS7
 0000040

	)

147 
	#CS8
 0000060

	)

148 
	#CSTOPB
 0000100

	)

149 
	#CREAD
 0000200

	)

150 
	#PARENB
 0000400

	)

151 
	#PARODD
 0001000

	)

152 
	#HUPCL
 0002000

	)

153 
	#CLOCAL
 0004000

	)

154 #ifde‡
__USE_MISC


155 
	#CBAUDEX
 0010000

	)

157 
	#B57600
 0010001

	)

158 
	#B115200
 0010002

	)

159 
	#B230400
 0010003

	)

160 
	#B460800
 0010004

	)

161 
	#B500000
 0010005

	)

162 
	#B576000
 0010006

	)

163 
	#B921600
 0010007

	)

164 
	#B1000000
 0010010

	)

165 
	#B1152000
 0010011

	)

166 
	#B1500000
 0010012

	)

167 
	#B2000000
 0010013

	)

168 
	#B2500000
 0010014

	)

169 
	#B3000000
 0010015

	)

170 
	#B3500000
 0010016

	)

171 
	#B4000000
 0010017

	)

172 
	#__MAX_BAUD
 
B4000000


	)

173 #ifde‡
__USE_MISC


174 
	#CIBAUD
 002003600000

	)

175 
	#CMSPAR
 010000000000

	)

176 
	#CRTSCTS
 020000000000

	)

180 
	#ISIG
 0000001

	)

181 
	#ICANON
 0000002

	)

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


183 
	#XCASE
 0000004

	)

185 
	#ECHO
 0000010

	)

186 
	#ECHOE
 0000020

	)

187 
	#ECHOK
 0000040

	)

188 
	#ECHONL
 0000100

	)

189 
	#NOFLSH
 0000200

	)

190 
	#TOSTOP
 0000400

	)

191 #ifde‡
__USE_MISC


192 
	#ECHOCTL
 0001000

	)

193 
	#ECHOPRT
 0002000

	)

194 
	#ECHOKE
 0004000

	)

195 
	#FLUSHO
 0010000

	)

196 
	#PENDIN
 0040000

	)

198 
	#IEXTEN
 0100000

	)

201 
	#TCOOFF
 0

	)

202 
	#TCOON
 1

	)

203 
	#TCIOFF
 2

	)

204 
	#TCION
 3

	)

207 
	#TCIFLUSH
 0

	)

208 
	#TCOFLUSH
 1

	)

209 
	#TCIOFLUSH
 2

	)

212 
	#TCSANOW
 0

	)

213 
	#TCSADRAIN
 1

	)

214 
	#TCSAFLUSH
 2

	)

217 
	#_IOT_ãrmios
 \

218 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/utmp.h

21 #i‚de‡
_UTMP_H


25 
	~<∑ths.h
>

26 
	~<sys/time.h
>

27 
	~<sys/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#UT_LINESIZE
 32

	)

32 
	#UT_NAMESIZE
 32

	)

33 
	#UT_HOSTSIZE
 256

	)

38 
	sœ°log


40 #i‡
__WORDSIZE
 =64 && 
deföed
 
__WORDSIZE_COMPAT32


41 
öt32_t
 
	mŒ_time
;

43 
__time_t
 
	mŒ_time
;

45 
	mŒ_löe
[
UT_LINESIZE
];

46 
	mŒ_ho°
[
UT_HOSTSIZE
];

52 
	sexô_°©us


54 
	me_ãrmö©i⁄
;

55 
	me_exô
;

60 
	sutmp


62 
	mut_ty≥
;

63 
pid_t
 
	mut_pid
;

64 
	mut_löe
[
UT_LINESIZE
];

65 
	mut_id
[4];

66 
	mut_u£r
[
UT_NAMESIZE
];

67 
	mut_ho°
[
UT_HOSTSIZE
];

68 
exô_°©us
 
	mut_exô
;

73 #i‡
__WORDSIZE
 =64 && 
deföed
 
__WORDSIZE_COMPAT32


74 
öt32_t
 
	mut_£ssi⁄
;

77 
öt32_t
 
	mtv_£c
;

78 
öt32_t
 
	mtv_u£c
;

79 } 
	mut_tv
;

81 
	mut_£ssi⁄
;

82 
timevÆ
 
	mut_tv
;

85 
öt32_t
 
	mut_addr_v6
[4];

86 
	m__unu£d
[20];

90 
	#ut_«me
 
ut_u£r


	)

91 #i‚de‡
_NO_UT_TIME


94 
	#ut_time
 
ut_tv
.
tv_£c


	)

96 
	#ut_xtime
 
ut_tv
.
tv_£c


	)

97 
	#ut_addr
 
ut_addr_v6
[0]

	)

101 
	#EMPTY
 0

	)

103 
	#RUN_LVL
 1

	)

104 
	#BOOT_TIME
 2

	)

105 
	#NEW_TIME
 3

	)

106 
	#OLD_TIME
 4

	)

108 
	#INIT_PROCESS
 5

	)

109 
	#LOGIN_PROCESS
 6

	)

110 
	#USER_PROCESS
 7

	)

111 
	#DEAD_PROCESS
 8

	)

113 
	#ACCOUNTING
 9

	)

116 
	#UT_UNKNOWN
 
EMPTY


	)

121 
	#_HAVE_UT_TYPE
 1

	)

122 
	#_HAVE_UT_PID
 1

	)

123 
	#_HAVE_UT_ID
 1

	)

124 
	#_HAVE_UT_TV
 1

	)

125 
	#_HAVE_UT_HOST
 1

	)

	@/usr/include/bits/utsname.h

19 #i‚de‡
_SYS_UTSNAME_H


24 
	#_UTSNAME_LENGTH
 65

	)

29 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/linux/sysctl.h

25 #i‚de‡
_LINUX_SYSCTL_H


26 
	#_LINUX_SYSCTL_H


	)

28 
	~<löux/kî√l.h
>

29 
	~<löux/ty≥s.h
>

32 
	gcom∂ëi⁄
;

34 
	#CTL_MAXNAME
 10

	)

39 
	s__sys˘l_¨gs
 {

40 *
	m«me
;

41 
	m∆í
;

42 *
	mﬁdvÆ
;

43 
size_t
 *
	mﬁdÀ≈
;

44 *
	m√wvÆ
;

45 
size_t
 
	m√wÀn
;

46 
	m__unu£d
[4];

57 
	mCTL_KERN
=1,

58 
	mCTL_VM
=2,

59 
	mCTL_NET
=3,

60 
	mCTL_PROC
=4,

61 
	mCTL_FS
=5,

62 
	mCTL_DEBUG
=6,

63 
	mCTL_DEV
=7,

64 
	mCTL_BUS
=8,

65 
	mCTL_ABI
=9,

66 
	mCTL_CPU
=10,

67 
	mCTL_ARLAN
=254,

68 
	mCTL_S390DBF
=5677,

69 
	mCTL_SUNRPC
=7249,

70 
	mCTL_PM
=9899,

71 
	mCTL_FRV
=9898,

77 
	mCTL_BUS_ISA
=1

83 
	mINOTIFY_MAX_USER_INSTANCES
=1,

84 
	mINOTIFY_MAX_USER_WATCHES
=2,

85 
	mINOTIFY_MAX_QUEUED_EVENTS
=3

91 
	mKERN_OSTYPE
=1,

92 
	mKERN_OSRELEASE
=2,

93 
	mKERN_OSREV
=3,

94 
	mKERN_VERSION
=4,

95 
	mKERN_SECUREMASK
=5,

96 
	mKERN_PROF
=6,

97 
	mKERN_NODENAME
=7,

98 
	mKERN_DOMAINNAME
=8,

100 
	mKERN_PANIC
=15,

101 
	mKERN_REALROOTDEV
=16,

103 
	mKERN_SPARC_REBOOT
=21,

104 
	mKERN_CTLALTDEL
=22,

105 
	mKERN_PRINTK
=23,

106 
	mKERN_NAMETRANS
=24,

107 
	mKERN_PPC_HTABRECLAIM
=25,

108 
	mKERN_PPC_ZEROPAGED
=26,

109 
	mKERN_PPC_POWERSAVE_NAP
=27,

110 
	mKERN_MODPROBE
=28,

111 
	mKERN_SG_BIG_BUFF
=29,

112 
	mKERN_ACCT
=30,

113 
	mKERN_PPC_L2CR
=31,

115 
	mKERN_RTSIGNR
=32,

116 
	mKERN_RTSIGMAX
=33,

118 
	mKERN_SHMMAX
=34,

119 
	mKERN_MSGMAX
=35,

120 
	mKERN_MSGMNB
=36,

121 
	mKERN_MSGPOOL
=37,

122 
	mKERN_SYSRQ
=38,

123 
	mKERN_MAX_THREADS
=39,

124 
	mKERN_RANDOM
=40,

125 
	mKERN_SHMALL
=41,

126 
	mKERN_MSGMNI
=42,

127 
	mKERN_SEM
=43,

128 
	mKERN_SPARC_STOP_A
=44,

129 
	mKERN_SHMMNI
=45,

130 
	mKERN_OVERFLOWUID
=46,

131 
	mKERN_OVERFLOWGID
=47,

132 
	mKERN_SHMPATH
=48,

133 
	mKERN_HOTPLUG
=49,

134 
	mKERN_IEEE_EMULATION_WARNINGS
=50,

135 
	mKERN_S390_USER_DEBUG_LOGGING
=51,

136 
	mKERN_CORE_USES_PID
=52,

137 
	mKERN_TAINTED
=53,

138 
	mKERN_CADPID
=54,

139 
	mKERN_PIDMAX
=55,

140 
	mKERN_CORE_PATTERN
=56,

141 
	mKERN_PANIC_ON_OOPS
=57,

142 
	mKERN_HPPA_PWRSW
=58,

143 
	mKERN_HPPA_UNALIGNED
=59,

144 
	mKERN_PRINTK_RATELIMIT
=60,

145 
	mKERN_PRINTK_RATELIMIT_BURST
=61,

146 
	mKERN_PTY
=62,

147 
	mKERN_NGROUPS_MAX
=63,

148 
	mKERN_SPARC_SCONS_PWROFF
=64,

149 
	mKERN_HZ_TIMER
=65,

150 
	mKERN_UNKNOWN_NMI_PANIC
=66,

151 
	mKERN_BOOTLOADER_TYPE
=67,

152 
	mKERN_RANDOMIZE
=68,

153 
	mKERN_SETUID_DUMPABLE
=69,

154 
	mKERN_SPIN_RETRY
=70,

155 
	mKERN_ACPI_VIDEO_FLAGS
=71,

156 
	mKERN_IA64_UNALIGNED
=72,

157 
	mKERN_COMPAT_LOG
=73,

158 
	mKERN_MAX_LOCK_DEPTH
=74,

159 
	mKERN_NMI_WATCHDOG
=75,

160 
	mKERN_PANIC_ON_NMI
=76,

168 
	mVM_UNUSED1
=1,

169 
	mVM_UNUSED2
=2,

170 
	mVM_UNUSED3
=3,

171 
	mVM_UNUSED4
=4,

172 
	mVM_OVERCOMMIT_MEMORY
=5,

173 
	mVM_UNUSED5
=6,

174 
	mVM_UNUSED7
=7,

175 
	mVM_UNUSED8
=8,

176 
	mVM_UNUSED9
=9,

177 
	mVM_PAGE_CLUSTER
=10,

178 
	mVM_DIRTY_BACKGROUND
=11,

179 
	mVM_DIRTY_RATIO
=12,

180 
	mVM_DIRTY_WB_CS
=13,

181 
	mVM_DIRTY_EXPIRE_CS
=14,

182 
	mVM_NR_PDFLUSH_THREADS
=15,

183 
	mVM_OVERCOMMIT_RATIO
=16,

184 
	mVM_PAGEBUF
=17,

185 
	mVM_HUGETLB_PAGES
=18,

186 
	mVM_SWAPPINESS
=19,

187 
	mVM_LOWMEM_RESERVE_RATIO
=20,

188 
	mVM_MIN_FREE_KBYTES
=21,

189 
	mVM_MAX_MAP_COUNT
=22,

190 
	mVM_LAPTOP_MODE
=23,

191 
	mVM_BLOCK_DUMP
=24,

192 
	mVM_HUGETLB_GROUP
=25,

193 
	mVM_VFS_CACHE_PRESSURE
=26,

194 
	mVM_LEGACY_VA_LAYOUT
=27,

195 
	mVM_SWAP_TOKEN_TIMEOUT
=28,

196 
	mVM_DROP_PAGECACHE
=29,

197 
	mVM_PERCPU_PAGELIST_FRACTION
=30,

198 
	mVM_ZONE_RECLAIM_MODE
=31,

199 
	mVM_MIN_UNMAPPED
=32,

200 
	mVM_PANIC_ON_OOM
=33,

201 
	mVM_VDSO_ENABLED
=34,

202 
	mVM_MIN_SLAB
=35,

209 
	mNET_CORE
=1,

210 
	mNET_ETHER
=2,

211 
	mNET_802
=3,

212 
	mNET_UNIX
=4,

213 
	mNET_IPV4
=5,

214 
	mNET_IPX
=6,

215 
	mNET_ATALK
=7,

216 
	mNET_NETROM
=8,

217 
	mNET_AX25
=9,

218 
	mNET_BRIDGE
=10,

219 
	mNET_ROSE
=11,

220 
	mNET_IPV6
=12,

221 
	mNET_X25
=13,

222 
	mNET_TR
=14,

223 
	mNET_DECNET
=15,

224 
	mNET_ECONET
=16,

225 
	mNET_SCTP
=17,

226 
	mNET_LLC
=18,

227 
	mNET_NETFILTER
=19,

228 
	mNET_DCCP
=20,

229 
	mNET_IRDA
=412,

235 
	mRANDOM_POOLSIZE
=1,

236 
	mRANDOM_ENTROPY_COUNT
=2,

237 
	mRANDOM_READ_THRESH
=3,

238 
	mRANDOM_WRITE_THRESH
=4,

239 
	mRANDOM_BOOT_ID
=5,

240 
	mRANDOM_UUID
=6

246 
	mPTY_MAX
=1,

247 
	mPTY_NR
=2

253 
	mBUS_ISA_MEM_BASE
=1,

254 
	mBUS_ISA_PORT_BASE
=2,

255 
	mBUS_ISA_PORT_SHIFT
=3

261 
	mNET_CORE_WMEM_MAX
=1,

262 
	mNET_CORE_RMEM_MAX
=2,

263 
	mNET_CORE_WMEM_DEFAULT
=3,

264 
	mNET_CORE_RMEM_DEFAULT
=4,

266 
	mNET_CORE_MAX_BACKLOG
=6,

267 
	mNET_CORE_FASTROUTE
=7,

268 
	mNET_CORE_MSG_COST
=8,

269 
	mNET_CORE_MSG_BURST
=9,

270 
	mNET_CORE_OPTMEM_MAX
=10,

271 
	mNET_CORE_HOT_LIST_LENGTH
=11,

272 
	mNET_CORE_DIVERT_VERSION
=12,

273 
	mNET_CORE_NO_CONG_THRESH
=13,

274 
	mNET_CORE_NO_CONG
=14,

275 
	mNET_CORE_LO_CONG
=15,

276 
	mNET_CORE_MOD_CONG
=16,

277 
	mNET_CORE_DEV_WEIGHT
=17,

278 
	mNET_CORE_SOMAXCONN
=18,

279 
	mNET_CORE_BUDGET
=19,

280 
	mNET_CORE_AEVENT_ETIME
=20,

281 
	mNET_CORE_AEVENT_RSEQTH
=21,

282 
	mNET_CORE_WARNINGS
=22,

293 
	mNET_UNIX_DESTROY_DELAY
=1,

294 
	mNET_UNIX_DELETE_DELAY
=2,

295 
	mNET_UNIX_MAX_DGRAM_QLEN
=3,

301 
	mNET_NF_CONNTRACK_MAX
=1,

302 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT
=2,

303 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV
=3,

304 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED
=4,

305 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT
=5,

306 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT
=6,

307 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK
=7,

308 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT
=8,

309 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE
=9,

310 
	mNET_NF_CONNTRACK_UDP_TIMEOUT
=10,

311 
	mNET_NF_CONNTRACK_UDP_TIMEOUT_STREAM
=11,

312 
	mNET_NF_CONNTRACK_ICMP_TIMEOUT
=12,

313 
	mNET_NF_CONNTRACK_GENERIC_TIMEOUT
=13,

314 
	mNET_NF_CONNTRACK_BUCKETS
=14,

315 
	mNET_NF_CONNTRACK_LOG_INVALID
=15,

316 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS
=16,

317 
	mNET_NF_CONNTRACK_TCP_LOOSE
=17,

318 
	mNET_NF_CONNTRACK_TCP_BE_LIBERAL
=18,

319 
	mNET_NF_CONNTRACK_TCP_MAX_RETRANS
=19,

320 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED
=20,

321 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT
=21,

322 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED
=22,

323 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED
=23,

324 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT
=24,

325 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD
=25,

326 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT
=26,

327 
	mNET_NF_CONNTRACK_COUNT
=27,

328 
	mNET_NF_CONNTRACK_ICMPV6_TIMEOUT
=28,

329 
	mNET_NF_CONNTRACK_FRAG6_TIMEOUT
=29,

330 
	mNET_NF_CONNTRACK_FRAG6_LOW_THRESH
=30,

331 
	mNET_NF_CONNTRACK_FRAG6_HIGH_THRESH
=31,

332 
	mNET_NF_CONNTRACK_CHECKSUM
=32,

339 
	mNET_IPV4_FORWARD
=8,

340 
	mNET_IPV4_DYNADDR
=9,

342 
	mNET_IPV4_CONF
=16,

343 
	mNET_IPV4_NEIGH
=17,

344 
	mNET_IPV4_ROUTE
=18,

345 
	mNET_IPV4_FIB_HASH
=19,

346 
	mNET_IPV4_NETFILTER
=20,

348 
	mNET_IPV4_TCP_TIMESTAMPS
=33,

349 
	mNET_IPV4_TCP_WINDOW_SCALING
=34,

350 
	mNET_IPV4_TCP_SACK
=35,

351 
	mNET_IPV4_TCP_RETRANS_COLLAPSE
=36,

352 
	mNET_IPV4_DEFAULT_TTL
=37,

353 
	mNET_IPV4_AUTOCONFIG
=38,

354 
	mNET_IPV4_NO_PMTU_DISC
=39,

355 
	mNET_IPV4_TCP_SYN_RETRIES
=40,

356 
	mNET_IPV4_IPFRAG_HIGH_THRESH
=41,

357 
	mNET_IPV4_IPFRAG_LOW_THRESH
=42,

358 
	mNET_IPV4_IPFRAG_TIME
=43,

359 
	mNET_IPV4_TCP_MAX_KA_PROBES
=44,

360 
	mNET_IPV4_TCP_KEEPALIVE_TIME
=45,

361 
	mNET_IPV4_TCP_KEEPALIVE_PROBES
=46,

362 
	mNET_IPV4_TCP_RETRIES1
=47,

363 
	mNET_IPV4_TCP_RETRIES2
=48,

364 
	mNET_IPV4_TCP_FIN_TIMEOUT
=49,

365 
	mNET_IPV4_IP_MASQ_DEBUG
=50,

366 
	mNET_TCP_SYNCOOKIES
=51,

367 
	mNET_TCP_STDURG
=52,

368 
	mNET_TCP_RFC1337
=53,

369 
	mNET_TCP_SYN_TAILDROP
=54,

370 
	mNET_TCP_MAX_SYN_BACKLOG
=55,

371 
	mNET_IPV4_LOCAL_PORT_RANGE
=56,

372 
	mNET_IPV4_ICMP_ECHO_IGNORE_ALL
=57,

373 
	mNET_IPV4_ICMP_ECHO_IGNORE_BROADCASTS
=58,

374 
	mNET_IPV4_ICMP_SOURCEQUENCH_RATE
=59,

375 
	mNET_IPV4_ICMP_DESTUNREACH_RATE
=60,

376 
	mNET_IPV4_ICMP_TIMEEXCEED_RATE
=61,

377 
	mNET_IPV4_ICMP_PARAMPROB_RATE
=62,

378 
	mNET_IPV4_ICMP_ECHOREPLY_RATE
=63,

379 
	mNET_IPV4_ICMP_IGNORE_BOGUS_ERROR_RESPONSES
=64,

380 
	mNET_IPV4_IGMP_MAX_MEMBERSHIPS
=65,

381 
	mNET_TCP_TW_RECYCLE
=66,

382 
	mNET_IPV4_ALWAYS_DEFRAG
=67,

383 
	mNET_IPV4_TCP_KEEPALIVE_INTVL
=68,

384 
	mNET_IPV4_INET_PEER_THRESHOLD
=69,

385 
	mNET_IPV4_INET_PEER_MINTTL
=70,

386 
	mNET_IPV4_INET_PEER_MAXTTL
=71,

387 
	mNET_IPV4_INET_PEER_GC_MINTIME
=72,

388 
	mNET_IPV4_INET_PEER_GC_MAXTIME
=73,

389 
	mNET_TCP_ORPHAN_RETRIES
=74,

390 
	mNET_TCP_ABORT_ON_OVERFLOW
=75,

391 
	mNET_TCP_SYNACK_RETRIES
=76,

392 
	mNET_TCP_MAX_ORPHANS
=77,

393 
	mNET_TCP_MAX_TW_BUCKETS
=78,

394 
	mNET_TCP_FACK
=79,

395 
	mNET_TCP_REORDERING
=80,

396 
	mNET_TCP_ECN
=81,

397 
	mNET_TCP_DSACK
=82,

398 
	mNET_TCP_MEM
=83,

399 
	mNET_TCP_WMEM
=84,

400 
	mNET_TCP_RMEM
=85,

401 
	mNET_TCP_APP_WIN
=86,

402 
	mNET_TCP_ADV_WIN_SCALE
=87,

403 
	mNET_IPV4_NONLOCAL_BIND
=88,

404 
	mNET_IPV4_ICMP_RATELIMIT
=89,

405 
	mNET_IPV4_ICMP_RATEMASK
=90,

406 
	mNET_TCP_TW_REUSE
=91,

407 
	mNET_TCP_FRTO
=92,

408 
	mNET_TCP_LOW_LATENCY
=93,

409 
	mNET_IPV4_IPFRAG_SECRET_INTERVAL
=94,

410 
	mNET_IPV4_IGMP_MAX_MSF
=96,

411 
	mNET_TCP_NO_METRICS_SAVE
=97,

412 
	mNET_TCP_DEFAULT_WIN_SCALE
=105,

413 
	mNET_TCP_MODERATE_RCVBUF
=106,

414 
	mNET_TCP_TSO_WIN_DIVISOR
=107,

415 
	mNET_TCP_BIC_BETA
=108,

416 
	mNET_IPV4_ICMP_ERRORS_USE_INBOUND_IFADDR
=109,

417 
	mNET_TCP_CONG_CONTROL
=110,

418 
	mNET_TCP_ABC
=111,

419 
	mNET_IPV4_IPFRAG_MAX_DIST
=112,

420 
	mNET_TCP_MTU_PROBING
=113,

421 
	mNET_TCP_BASE_MSS
=114,

422 
	mNET_IPV4_TCP_WORKAROUND_SIGNED_WINDOWS
=115,

423 
	mNET_TCP_DMA_COPYBREAK
=116,

424 
	mNET_TCP_SLOW_START_AFTER_IDLE
=117,

425 
	mNET_CIPSOV4_CACHE_ENABLE
=118,

426 
	mNET_CIPSOV4_CACHE_BUCKET_SIZE
=119,

427 
	mNET_CIPSOV4_RBM_OPTFMT
=120,

428 
	mNET_CIPSOV4_RBM_STRICTVALID
=121,

429 
	mNET_TCP_AVAIL_CONG_CONTROL
=122,

430 
	mNET_TCP_ALLOWED_CONG_CONTROL
=123,

431 
	mNET_TCP_MAX_SSTHRESH
=124,

432 
	mNET_TCP_FRTO_RESPONSE
=125,

436 
	mNET_IPV4_ROUTE_FLUSH
=1,

437 
	mNET_IPV4_ROUTE_MIN_DELAY
=2,

438 
	mNET_IPV4_ROUTE_MAX_DELAY
=3,

439 
	mNET_IPV4_ROUTE_GC_THRESH
=4,

440 
	mNET_IPV4_ROUTE_MAX_SIZE
=5,

441 
	mNET_IPV4_ROUTE_GC_MIN_INTERVAL
=6,

442 
	mNET_IPV4_ROUTE_GC_TIMEOUT
=7,

443 
	mNET_IPV4_ROUTE_GC_INTERVAL
=8,

444 
	mNET_IPV4_ROUTE_REDIRECT_LOAD
=9,

445 
	mNET_IPV4_ROUTE_REDIRECT_NUMBER
=10,

446 
	mNET_IPV4_ROUTE_REDIRECT_SILENCE
=11,

447 
	mNET_IPV4_ROUTE_ERROR_COST
=12,

448 
	mNET_IPV4_ROUTE_ERROR_BURST
=13,

449 
	mNET_IPV4_ROUTE_GC_ELASTICITY
=14,

450 
	mNET_IPV4_ROUTE_MTU_EXPIRES
=15,

451 
	mNET_IPV4_ROUTE_MIN_PMTU
=16,

452 
	mNET_IPV4_ROUTE_MIN_ADVMSS
=17,

453 
	mNET_IPV4_ROUTE_SECRET_INTERVAL
=18,

454 
	mNET_IPV4_ROUTE_GC_MIN_INTERVAL_MS
=19,

459 
	mNET_PROTO_CONF_ALL
=-2,

460 
	mNET_PROTO_CONF_DEFAULT
=-3

467 
	mNET_IPV4_CONF_FORWARDING
=1,

468 
	mNET_IPV4_CONF_MC_FORWARDING
=2,

469 
	mNET_IPV4_CONF_PROXY_ARP
=3,

470 
	mNET_IPV4_CONF_ACCEPT_REDIRECTS
=4,

471 
	mNET_IPV4_CONF_SECURE_REDIRECTS
=5,

472 
	mNET_IPV4_CONF_SEND_REDIRECTS
=6,

473 
	mNET_IPV4_CONF_SHARED_MEDIA
=7,

474 
	mNET_IPV4_CONF_RP_FILTER
=8,

475 
	mNET_IPV4_CONF_ACCEPT_SOURCE_ROUTE
=9,

476 
	mNET_IPV4_CONF_BOOTP_RELAY
=10,

477 
	mNET_IPV4_CONF_LOG_MARTIANS
=11,

478 
	mNET_IPV4_CONF_TAG
=12,

479 
	mNET_IPV4_CONF_ARPFILTER
=13,

480 
	mNET_IPV4_CONF_MEDIUM_ID
=14,

481 
	mNET_IPV4_CONF_NOXFRM
=15,

482 
	mNET_IPV4_CONF_NOPOLICY
=16,

483 
	mNET_IPV4_CONF_FORCE_IGMP_VERSION
=17,

484 
	mNET_IPV4_CONF_ARP_ANNOUNCE
=18,

485 
	mNET_IPV4_CONF_ARP_IGNORE
=19,

486 
	mNET_IPV4_CONF_PROMOTE_SECONDARIES
=20,

487 
	mNET_IPV4_CONF_ARP_ACCEPT
=21,

488 
	mNET_IPV4_CONF_ARP_NOTIFY
=22,

489 
	mNET_IPV4_CONF_SRC_VMARK
=24,

490 
	m__NET_IPV4_CONF_MAX


496 
	mNET_IPV4_NF_CONNTRACK_MAX
=1,

497 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT
=2,

498 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV
=3,

499 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED
=4,

500 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT
=5,

501 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT
=6,

502 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK
=7,

503 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT
=8,

504 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE
=9,

505 
	mNET_IPV4_NF_CONNTRACK_UDP_TIMEOUT
=10,

506 
	mNET_IPV4_NF_CONNTRACK_UDP_TIMEOUT_STREAM
=11,

507 
	mNET_IPV4_NF_CONNTRACK_ICMP_TIMEOUT
=12,

508 
	mNET_IPV4_NF_CONNTRACK_GENERIC_TIMEOUT
=13,

509 
	mNET_IPV4_NF_CONNTRACK_BUCKETS
=14,

510 
	mNET_IPV4_NF_CONNTRACK_LOG_INVALID
=15,

511 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS
=16,

512 
	mNET_IPV4_NF_CONNTRACK_TCP_LOOSE
=17,

513 
	mNET_IPV4_NF_CONNTRACK_TCP_BE_LIBERAL
=18,

514 
	mNET_IPV4_NF_CONNTRACK_TCP_MAX_RETRANS
=19,

515 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED
=20,

516 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT
=21,

517 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED
=22,

518 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED
=23,

519 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT
=24,

520 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD
=25,

521 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT
=26,

522 
	mNET_IPV4_NF_CONNTRACK_COUNT
=27,

523 
	mNET_IPV4_NF_CONNTRACK_CHECKSUM
=28,

528 
	mNET_IPV6_CONF
=16,

529 
	mNET_IPV6_NEIGH
=17,

530 
	mNET_IPV6_ROUTE
=18,

531 
	mNET_IPV6_ICMP
=19,

532 
	mNET_IPV6_BINDV6ONLY
=20,

533 
	mNET_IPV6_IP6FRAG_HIGH_THRESH
=21,

534 
	mNET_IPV6_IP6FRAG_LOW_THRESH
=22,

535 
	mNET_IPV6_IP6FRAG_TIME
=23,

536 
	mNET_IPV6_IP6FRAG_SECRET_INTERVAL
=24,

537 
	mNET_IPV6_MLD_MAX_MSF
=25,

541 
	mNET_IPV6_ROUTE_FLUSH
=1,

542 
	mNET_IPV6_ROUTE_GC_THRESH
=2,

543 
	mNET_IPV6_ROUTE_MAX_SIZE
=3,

544 
	mNET_IPV6_ROUTE_GC_MIN_INTERVAL
=4,

545 
	mNET_IPV6_ROUTE_GC_TIMEOUT
=5,

546 
	mNET_IPV6_ROUTE_GC_INTERVAL
=6,

547 
	mNET_IPV6_ROUTE_GC_ELASTICITY
=7,

548 
	mNET_IPV6_ROUTE_MTU_EXPIRES
=8,

549 
	mNET_IPV6_ROUTE_MIN_ADVMSS
=9,

550 
	mNET_IPV6_ROUTE_GC_MIN_INTERVAL_MS
=10

554 
	mNET_IPV6_FORWARDING
=1,

555 
	mNET_IPV6_HOP_LIMIT
=2,

556 
	mNET_IPV6_MTU
=3,

557 
	mNET_IPV6_ACCEPT_RA
=4,

558 
	mNET_IPV6_ACCEPT_REDIRECTS
=5,

559 
	mNET_IPV6_AUTOCONF
=6,

560 
	mNET_IPV6_DAD_TRANSMITS
=7,

561 
	mNET_IPV6_RTR_SOLICITS
=8,

562 
	mNET_IPV6_RTR_SOLICIT_INTERVAL
=9,

563 
	mNET_IPV6_RTR_SOLICIT_DELAY
=10,

564 
	mNET_IPV6_USE_TEMPADDR
=11,

565 
	mNET_IPV6_TEMP_VALID_LFT
=12,

566 
	mNET_IPV6_TEMP_PREFERED_LFT
=13,

567 
	mNET_IPV6_REGEN_MAX_RETRY
=14,

568 
	mNET_IPV6_MAX_DESYNC_FACTOR
=15,

569 
	mNET_IPV6_MAX_ADDRESSES
=16,

570 
	mNET_IPV6_FORCE_MLD_VERSION
=17,

571 
	mNET_IPV6_ACCEPT_RA_DEFRTR
=18,

572 
	mNET_IPV6_ACCEPT_RA_PINFO
=19,

573 
	mNET_IPV6_ACCEPT_RA_RTR_PREF
=20,

574 
	mNET_IPV6_RTR_PROBE_INTERVAL
=21,

575 
	mNET_IPV6_ACCEPT_RA_RT_INFO_MAX_PLEN
=22,

576 
	mNET_IPV6_PROXY_NDP
=23,

577 
	mNET_IPV6_ACCEPT_SOURCE_ROUTE
=25,

578 
	m__NET_IPV6_MAX


583 
	mNET_IPV6_ICMP_RATELIMIT
=1

588 
	mNET_NEIGH_MCAST_SOLICIT
=1,

589 
	mNET_NEIGH_UCAST_SOLICIT
=2,

590 
	mNET_NEIGH_APP_SOLICIT
=3,

591 
	mNET_NEIGH_RETRANS_TIME
=4,

592 
	mNET_NEIGH_REACHABLE_TIME
=5,

593 
	mNET_NEIGH_DELAY_PROBE_TIME
=6,

594 
	mNET_NEIGH_GC_STALE_TIME
=7,

595 
	mNET_NEIGH_UNRES_QLEN
=8,

596 
	mNET_NEIGH_PROXY_QLEN
=9,

597 
	mNET_NEIGH_ANYCAST_DELAY
=10,

598 
	mNET_NEIGH_PROXY_DELAY
=11,

599 
	mNET_NEIGH_LOCKTIME
=12,

600 
	mNET_NEIGH_GC_INTERVAL
=13,

601 
	mNET_NEIGH_GC_THRESH1
=14,

602 
	mNET_NEIGH_GC_THRESH2
=15,

603 
	mNET_NEIGH_GC_THRESH3
=16,

604 
	mNET_NEIGH_RETRANS_TIME_MS
=17,

605 
	mNET_NEIGH_REACHABLE_TIME_MS
=18,

606 
	m__NET_NEIGH_MAX


611 
	mNET_DCCP_DEFAULT
=1,

616 
	mNET_IPX_PPROP_BROADCASTING
=1,

617 
	mNET_IPX_FORWARDING
=2

622 
	mNET_LLC2
=1,

623 
	mNET_LLC_STATION
=2,

628 
	mNET_LLC2_TIMEOUT
=1,

633 
	mNET_LLC_STATION_ACK_TIMEOUT
=1,

638 
	mNET_LLC2_ACK_TIMEOUT
=1,

639 
	mNET_LLC2_P_TIMEOUT
=2,

640 
	mNET_LLC2_REJ_TIMEOUT
=3,

641 
	mNET_LLC2_BUSY_TIMEOUT
=4,

646 
	mNET_ATALK_AARP_EXPIRY_TIME
=1,

647 
	mNET_ATALK_AARP_TICK_TIME
=2,

648 
	mNET_ATALK_AARP_RETRANSMIT_LIMIT
=3,

649 
	mNET_ATALK_AARP_RESOLVE_TIME
=4

655 
	mNET_NETROM_DEFAULT_PATH_QUALITY
=1,

656 
	mNET_NETROM_OBSOLESCENCE_COUNT_INITIALISER
=2,

657 
	mNET_NETROM_NETWORK_TTL_INITIALISER
=3,

658 
	mNET_NETROM_TRANSPORT_TIMEOUT
=4,

659 
	mNET_NETROM_TRANSPORT_MAXIMUM_TRIES
=5,

660 
	mNET_NETROM_TRANSPORT_ACKNOWLEDGE_DELAY
=6,

661 
	mNET_NETROM_TRANSPORT_BUSY_DELAY
=7,

662 
	mNET_NETROM_TRANSPORT_REQUESTED_WINDOW_SIZE
=8,

663 
	mNET_NETROM_TRANSPORT_NO_ACTIVITY_TIMEOUT
=9,

664 
	mNET_NETROM_ROUTING_CONTROL
=10,

665 
	mNET_NETROM_LINK_FAILS_COUNT
=11,

666 
	mNET_NETROM_RESET
=12

671 
	mNET_AX25_IP_DEFAULT_MODE
=1,

672 
	mNET_AX25_DEFAULT_MODE
=2,

673 
	mNET_AX25_BACKOFF_TYPE
=3,

674 
	mNET_AX25_CONNECT_MODE
=4,

675 
	mNET_AX25_STANDARD_WINDOW
=5,

676 
	mNET_AX25_EXTENDED_WINDOW
=6,

677 
	mNET_AX25_T1_TIMEOUT
=7,

678 
	mNET_AX25_T2_TIMEOUT
=8,

679 
	mNET_AX25_T3_TIMEOUT
=9,

680 
	mNET_AX25_IDLE_TIMEOUT
=10,

681 
	mNET_AX25_N2
=11,

682 
	mNET_AX25_PACLEN
=12,

683 
	mNET_AX25_PROTOCOL
=13,

684 
	mNET_AX25_DAMA_SLAVE_TIMEOUT
=14

689 
	mNET_ROSE_RESTART_REQUEST_TIMEOUT
=1,

690 
	mNET_ROSE_CALL_REQUEST_TIMEOUT
=2,

691 
	mNET_ROSE_RESET_REQUEST_TIMEOUT
=3,

692 
	mNET_ROSE_CLEAR_REQUEST_TIMEOUT
=4,

693 
	mNET_ROSE_ACK_HOLD_BACK_TIMEOUT
=5,

694 
	mNET_ROSE_ROUTING_CONTROL
=6,

695 
	mNET_ROSE_LINK_FAIL_TIMEOUT
=7,

696 
	mNET_ROSE_MAX_VCS
=8,

697 
	mNET_ROSE_WINDOW_SIZE
=9,

698 
	mNET_ROSE_NO_ACTIVITY_TIMEOUT
=10

703 
	mNET_X25_RESTART_REQUEST_TIMEOUT
=1,

704 
	mNET_X25_CALL_REQUEST_TIMEOUT
=2,

705 
	mNET_X25_RESET_REQUEST_TIMEOUT
=3,

706 
	mNET_X25_CLEAR_REQUEST_TIMEOUT
=4,

707 
	mNET_X25_ACK_HOLD_BACK_TIMEOUT
=5,

708 
	mNET_X25_FORWARD
=6

714 
	mNET_TR_RIF_TIMEOUT
=1

719 
	mNET_DECNET_NODE_TYPE
 = 1,

720 
	mNET_DECNET_NODE_ADDRESS
 = 2,

721 
	mNET_DECNET_NODE_NAME
 = 3,

722 
	mNET_DECNET_DEFAULT_DEVICE
 = 4,

723 
	mNET_DECNET_TIME_WAIT
 = 5,

724 
	mNET_DECNET_DN_COUNT
 = 6,

725 
	mNET_DECNET_DI_COUNT
 = 7,

726 
	mNET_DECNET_DR_COUNT
 = 8,

727 
	mNET_DECNET_DST_GC_INTERVAL
 = 9,

728 
	mNET_DECNET_CONF
 = 10,

729 
	mNET_DECNET_NO_FC_MAX_CWND
 = 11,

730 
	mNET_DECNET_MEM
 = 12,

731 
	mNET_DECNET_RMEM
 = 13,

732 
	mNET_DECNET_WMEM
 = 14,

733 
	mNET_DECNET_DEBUG_LEVEL
 = 255

738 
	mNET_DECNET_CONF_LOOPBACK
 = -2,

739 
	mNET_DECNET_CONF_DDCMP
 = -3,

740 
	mNET_DECNET_CONF_PPP
 = -4,

741 
	mNET_DECNET_CONF_X25
 = -5,

742 
	mNET_DECNET_CONF_GRE
 = -6,

743 
	mNET_DECNET_CONF_ETHER
 = -7

750 
	mNET_DECNET_CONF_DEV_PRIORITY
 = 1,

751 
	mNET_DECNET_CONF_DEV_T1
 = 2,

752 
	mNET_DECNET_CONF_DEV_T2
 = 3,

753 
	mNET_DECNET_CONF_DEV_T3
 = 4,

754 
	mNET_DECNET_CONF_DEV_FORWARDING
 = 5,

755 
	mNET_DECNET_CONF_DEV_BLKSIZE
 = 6,

756 
	mNET_DECNET_CONF_DEV_STATE
 = 7

761 
	mNET_SCTP_RTO_INITIAL
 = 1,

762 
	mNET_SCTP_RTO_MIN
 = 2,

763 
	mNET_SCTP_RTO_MAX
 = 3,

764 
	mNET_SCTP_RTO_ALPHA
 = 4,

765 
	mNET_SCTP_RTO_BETA
 = 5,

766 
	mNET_SCTP_VALID_COOKIE_LIFE
 = 6,

767 
	mNET_SCTP_ASSOCIATION_MAX_RETRANS
 = 7,

768 
	mNET_SCTP_PATH_MAX_RETRANS
 = 8,

769 
	mNET_SCTP_MAX_INIT_RETRANSMITS
 = 9,

770 
	mNET_SCTP_HB_INTERVAL
 = 10,

771 
	mNET_SCTP_PRESERVE_ENABLE
 = 11,

772 
	mNET_SCTP_MAX_BURST
 = 12,

773 
	mNET_SCTP_ADDIP_ENABLE
 = 13,

774 
	mNET_SCTP_PRSCTP_ENABLE
 = 14,

775 
	mNET_SCTP_SNDBUF_POLICY
 = 15,

776 
	mNET_SCTP_SACK_TIMEOUT
 = 16,

777 
	mNET_SCTP_RCVBUF_POLICY
 = 17,

782 
	mNET_BRIDGE_NF_CALL_ARPTABLES
 = 1,

783 
	mNET_BRIDGE_NF_CALL_IPTABLES
 = 2,

784 
	mNET_BRIDGE_NF_CALL_IP6TABLES
 = 3,

785 
	mNET_BRIDGE_NF_FILTER_VLAN_TAGGED
 = 4,

786 
	mNET_BRIDGE_NF_FILTER_PPPOE_TAGGED
 = 5,

791 
	mNET_IRDA_DISCOVERY
=1,

792 
	mNET_IRDA_DEVNAME
=2,

793 
	mNET_IRDA_DEBUG
=3,

794 
	mNET_IRDA_FAST_POLL
=4,

795 
	mNET_IRDA_DISCOVERY_SLOTS
=5,

796 
	mNET_IRDA_DISCOVERY_TIMEOUT
=6,

797 
	mNET_IRDA_SLOT_TIMEOUT
=7,

798 
	mNET_IRDA_MAX_BAUD_RATE
=8,

799 
	mNET_IRDA_MIN_TX_TURN_TIME
=9,

800 
	mNET_IRDA_MAX_TX_DATA_SIZE
=10,

801 
	mNET_IRDA_MAX_TX_WINDOW
=11,

802 
	mNET_IRDA_MAX_NOREPLY_TIME
=12,

803 
	mNET_IRDA_WARN_NOREPLY_TIME
=13,

804 
	mNET_IRDA_LAP_KEEPALIVE_TIME
=14,

811 
	mFS_NRINODE
=1,

812 
	mFS_STATINODE
=2,

813 
	mFS_MAXINODE
=3,

814 
	mFS_NRDQUOT
=4,

815 
	mFS_MAXDQUOT
=5,

816 
	mFS_NRFILE
=6,

817 
	mFS_MAXFILE
=7,

818 
	mFS_DENTRY
=8,

819 
	mFS_NRSUPER
=9,

820 
	mFS_MAXSUPER
=10,

821 
	mFS_OVERFLOWUID
=11,

822 
	mFS_OVERFLOWGID
=12,

823 
	mFS_LEASES
=13,

824 
	mFS_DIR_NOTIFY
=14,

825 
	mFS_LEASE_TIME
=15,

826 
	mFS_DQSTATS
=16,

827 
	mFS_XFS
=17,

828 
	mFS_AIO_NR
=18,

829 
	mFS_AIO_MAX_NR
=19,

830 
	mFS_INOTIFY
=20,

831 
	mFS_OCFS2
=988,

836 
	mFS_DQ_LOOKUPS
 = 1,

837 
	mFS_DQ_DROPS
 = 2,

838 
	mFS_DQ_READS
 = 3,

839 
	mFS_DQ_WRITES
 = 4,

840 
	mFS_DQ_CACHE_HITS
 = 5,

841 
	mFS_DQ_ALLOCATED
 = 6,

842 
	mFS_DQ_FREE
 = 7,

843 
	mFS_DQ_SYNCS
 = 8,

844 
	mFS_DQ_WARNINGS
 = 9,

851 
	mDEV_CDROM
=1,

852 
	mDEV_HWMON
=2,

853 
	mDEV_PARPORT
=3,

854 
	mDEV_RAID
=4,

855 
	mDEV_MAC_HID
=5,

856 
	mDEV_SCSI
=6,

857 
	mDEV_IPMI
=7,

862 
	mDEV_CDROM_INFO
=1,

863 
	mDEV_CDROM_AUTOCLOSE
=2,

864 
	mDEV_CDROM_AUTOEJECT
=3,

865 
	mDEV_CDROM_DEBUG
=4,

866 
	mDEV_CDROM_LOCK
=5,

867 
	mDEV_CDROM_CHECK_MEDIA
=6

872 
	mDEV_PARPORT_DEFAULT
=-3

877 
	mDEV_RAID_SPEED_LIMIT_MIN
=1,

878 
	mDEV_RAID_SPEED_LIMIT_MAX
=2

883 
	mDEV_PARPORT_DEFAULT_TIMESLICE
=1,

884 
	mDEV_PARPORT_DEFAULT_SPINTIME
=2

889 
	mDEV_PARPORT_SPINTIME
=1,

890 
	mDEV_PARPORT_BASE_ADDR
=2,

891 
	mDEV_PARPORT_IRQ
=3,

892 
	mDEV_PARPORT_DMA
=4,

893 
	mDEV_PARPORT_MODES
=5,

894 
	mDEV_PARPORT_DEVICES
=6,

895 
	mDEV_PARPORT_AUTOPROBE
=16

900 
	mDEV_PARPORT_DEVICES_ACTIVE
=-3,

905 
	mDEV_PARPORT_DEVICE_TIMESLICE
=1,

910 
	mDEV_MAC_HID_KEYBOARD_SENDS_LINUX_KEYCODES
=1,

911 
	mDEV_MAC_HID_KEYBOARD_LOCK_KEYCODES
=2,

912 
	mDEV_MAC_HID_MOUSE_BUTTON_EMULATION
=3,

913 
	mDEV_MAC_HID_MOUSE_BUTTON2_KEYCODE
=4,

914 
	mDEV_MAC_HID_MOUSE_BUTTON3_KEYCODE
=5,

915 
	mDEV_MAC_HID_ADB_MOUSE_SENDS_KEYCODES
=6

920 
	mDEV_SCSI_LOGGING_LEVEL
=1,

925 
	mDEV_IPMI_POWEROFF_POWERCYCLE
=1,

931 
	mABI_DEFHANDLER_COFF
=1,

932 
	mABI_DEFHANDLER_ELF
=2,

933 
	mABI_DEFHANDLER_LCALL7
=3,

934 
	mABI_DEFHANDLER_LIBCSO
=4,

935 
	mABI_TRACE
=5,

936 
	mABI_FAKE_UTSNAME
=6,

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

10 
	#SI_LOAD_SHIFT
 16

	)

11 
	ssysöfo
 {

12 
	mu±ime
;

13 
	mlﬂds
[3];

14 
	mtŸÆøm
;

15 
	m‰ìøm
;

16 
	msh¨edøm
;

17 
	mbuf„ºam
;

18 
	mtŸÆsw≠
;

19 
	m‰ìsw≠
;

20 
	m¥ocs
;

21 
	m∑d
;

22 
	mtŸÆhigh
;

23 
	m‰ìhigh
;

24 
	mmem_unô
;

25 
	m_f
[20-2*()-()];

29 
	#BUILD_BUG_ON
(
c⁄dôi⁄
Ë(()
	`BUILD_BUG_ON_ZERO
(c⁄dôi⁄))

	)

32 
	#MAYBE_BUILD_BUG_ON
(
c⁄d
Ë(()([1 - 2 * !!(c⁄d)]))

	)

38 
	#BUILD_BUG_ON_ZERO
(
e
Ë((°ru˘ { :-!!”); }))

	)

39 
	#BUILD_BUG_ON_NULL
(
e
Ë((*)(°ru˘ { :-!!”); }))

	)

42 
	#__FUNCTION__
 (
__func__
)

	)

45 #ifde‡
CONFIG_NUMA


46 
	#NUMA_BUILD
 1

	)

48 
	#NUMA_BUILD
 0

	)

52 #ifde‡
CONFIG_FTRACE_MCOUNT_RECORD


53 
	#REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD


	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

	@/usr/include/paths.h

32 #i‚de‡
_PATHS_H_


33 
	#_PATHS_H_


	)

36 
	#_PATH_DEFPATH
 "/u§/bö:/bö"

	)

38 
	#_PATH_STDPATH
 \

39 "/u§/bö:/bö:/u§/sbö:/sbö"

	)

41 
	#_PATH_BSHELL
 "/bö/sh"

	)

42 
	#_PATH_CONSOLE
 "/dev/c⁄sﬁe"

	)

43 
	#_PATH_CSHELL
 "/bö/csh"

	)

44 
	#_PATH_DEVDB
 "/v¨/run/dev.db"

	)

45 
	#_PATH_DEVNULL
 "/dev/nuŒ"

	)

46 
	#_PATH_DRUM
 "/dev/drum"

	)

47 
	#_PATH_GSHADOW
 "/ëc/gshadow"

	)

48 
	#_PATH_KLOG
 "/¥oc/kmsg"

	)

49 
	#_PATH_KMEM
 "/dev/kmem"

	)

50 
	#_PATH_LASTLOG
 "/v¨/log/œ°log"

	)

51 
	#_PATH_MAILDIR
 "/v¨/maû"

	)

52 
	#_PATH_MAN
 "/u§/sh¨e/m™"

	)

53 
	#_PATH_MEM
 "/dev/mem"

	)

54 
	#_PATH_MNTTAB
 "/ëc/f°ab"

	)

55 
	#_PATH_MOUNTED
 "/ëc/mèb"

	)

56 
	#_PATH_NOLOGIN
 "/ëc/nﬁogö"

	)

57 
	#_PATH_PRESERVE
 "/v¨/lib"

	)

58 
	#_PATH_RWHODIR
 "/v¨/•oﬁ/rwho"

	)

59 
	#_PATH_SENDMAIL
 "/u§/sbö/£ndmaû"

	)

60 
	#_PATH_SHADOW
 "/ëc/shadow"

	)

61 
	#_PATH_SHELLS
 "/ëc/shñls"

	)

62 
	#_PATH_TTY
 "/dev/ây"

	)

63 
	#_PATH_UNIX
 "/boŸ/vmlöux"

	)

64 
	#_PATH_UTMP
 "/v¨/run/utmp"

	)

65 
	#_PATH_VI
 "/u§/bö/vi"

	)

66 
	#_PATH_WTMP
 "/v¨/log/wtmp"

	)

69 
	#_PATH_DEV
 "/dev/"

	)

70 
	#_PATH_TMP
 "/tmp/"

	)

71 
	#_PATH_VARDB
 "/v¨/lib/misc/"

	)

72 
	#_PATH_VARRUN
 "/v¨/run/"

	)

73 
	#_PATH_VARTMP
 "/v¨/tmp/"

	)

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 
	#TIOCSRS485
 0x542F

	)

66 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

67 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

68 
	#TCGETX
 0x5432

	)

69 
	#TCSETX
 0x5433

	)

70 
	#TCSETXF
 0x5434

	)

71 
	#TCSETXW
 0x5435

	)

73 
	#FIONCLEX
 0x5450

	)

74 
	#FIOCLEX
 0x5451

	)

75 
	#FIOASYNC
 0x5452

	)

76 
	#TIOCSERCONFIG
 0x5453

	)

77 
	#TIOCSERGWILD
 0x5454

	)

78 
	#TIOCSERSWILD
 0x5455

	)

79 
	#TIOCGLCKTRMIOS
 0x5456

	)

80 
	#TIOCSLCKTRMIOS
 0x5457

	)

81 
	#TIOCSERGSTRUCT
 0x5458

	)

82 
	#TIOCSERGETLSR
 0x5459

	)

83 
	#TIOCSERGETMULTI
 0x545A

	)

84 
	#TIOCSERSETMULTI
 0x545B

	)

86 
	#TIOCMIWAIT
 0x545C

	)

87 
	#TIOCGICOUNT
 0x545D

	)

93 #i‚de‡
FIOQSIZE


94 
	#TIOCGHAYESESP
 0x545E

	)

95 
	#TIOCSHAYESESP
 0x545F

	)

96 
	#FIOQSIZE
 0x5460

	)

100 
	#TIOCPKT_DATA
 0

	)

101 
	#TIOCPKT_FLUSHREAD
 1

	)

102 
	#TIOCPKT_FLUSHWRITE
 2

	)

103 
	#TIOCPKT_STOP
 4

	)

104 
	#TIOCPKT_START
 8

	)

105 
	#TIOCPKT_NOSTOP
 16

	)

106 
	#TIOCPKT_DOSTOP
 32

	)

108 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	#dma_addr_t
 
dma_addr_t


	)

6 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

9 #i‚de‡
__ASSEMBLY__


11 
	tumode_t
;

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
148
3715
cat/icat.c
cd/icd.c
cp/icp.c
echo/iecho.c
ls/dir/filesize.c
ls/dir/te.c
ls/fileinfo.c
ls/filesize.c
ls/ils.c
mkdir/imkdir.c
more/more.c
proc/iproc.c
pwd/ipwd.c
rm/irm.c
uname/system.h
uname/uname.c
who/iwho.c
/usr/include/alloca.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/error.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/grp.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/pwd.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/dir.h
/usr/include/sys/file.h
/usr/include/sys/ioctl.h
/usr/include/sys/param.h
/usr/include/sys/stat.h
/usr/include/sys/sysctl.h
/usr/include/sys/sysmacros.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/utmp.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/error.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/locale.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/utmp.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/linux/sysctl.h
/usr/include/sys/select.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/param.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/select.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/kernel.h
/usr/include/linux/types.h
/usr/include/paths.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/param.h
/usr/include/asm/errno.h
/usr/include/asm/types.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/posix_types.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/types.h
/usr/include/asm/posix_types.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/linux/ioctl.h
/usr/include/linux/stddef.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm/ioctl.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm/bitsperlong.h
/usr/include/bits/sched.h
/usr/include/asm-generic/bitsperlong.h
