!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BUFSIZE	eval.h	9;"	d
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -Wall$/;"	m
DEF_PROMPT	config.h	8;"	d
OBJS	Makefile	/^OBJS = $(SRC:.c=.o)$/;"	m
PROGRAM	Makefile	/^PROGRAM = shell$/;"	m
SRC	Makefile	/^SRC =  shell.c eval.c$/;"	m
create_str	eval.c	/^char * create_str(char *begin, int len)$/;"	f	signature:(char *begin, int len)
create_str	eval.h	/^char * create_str(char *begin, int len);$/;"	p	signature:(char *begin, int len)
emalloc	eval.c	/^void *emalloc(size_t n)$/;"	f	signature:(size_t n)
erealloc	eval.c	/^void *erealloc(void *point, size_t n)$/;"	f	signature:(void *point, size_t n)
fatal	eval.c	/^void fatal(char *str_err, char *str_error, int exit_code)$/;"	f	signature:(char *str_err, char *str_error, int exit_code)
fatal	eval.h	/^void fatal(char *str_err, char *str_error, int exit_code);$/;"	p	signature:(char *str_err, char *str_error, int exit_code)
free_list	eval.c	/^void free_list(char **list)$/;"	f	signature:(char **list)
free_list	eval.h	/^void free_list(char **list);$/;"	p	signature:(char **list)
free_list	shell.c	/^void free_list(char **list)$/;"	f	signature:(char **list)
initialize	shell.c	/^void initialize()$/;"	f
initialize	shell.c	/^void initialize();$/;"	p	file:
is_none_c	eval.c	15;"	d	file:
main	shell.c	/^int main(int argc, const char *argv[])$/;"	f	signature:(int argc, const char *argv[])
read_command	eval.c	/^char * read_command(FILE *fp)$/;"	f	signature:(FILE *fp)
read_command	eval.h	/^char * read_command(FILE *fp);$/;"	p	signature:(FILE *fp)
spiltline	eval.c	/^char **spiltline(char *cmdline)$/;"	f	signature:(char *cmdline)
spiltline	eval.h	/^char **spiltline(char *cmdline);$/;"	p	signature:(char *cmdline)
